{"version":3,"file":"workbook-reader.js","names":["fs","require","EventEmitter","PassThrough","Readable","nodeStream","unzip","tmp","iterateStream","parseSax","StyleManager","WorkbookXform","RelationshipsXform","WorksheetReader","HyperlinkReader","setGracefulCleanup","WorkbookReader","input","options","worksheets","sharedStrings","hyperlinks","styles","entries","init","createReadStream","Error","parse","eventType","value","emit","read","stream","_getStream","zip","Parse","forceStream","pipe","waitingWorkSheets","entry","path","_parseRels","_parseWorkbook","_parseSharedStrings","_parseStyles","match","sheetNo","workbookRels","_parseWorksheet","Promise","resolve","reject","file","err","fd","tempFileCleanupCallback","push","tempStream","createWriteStream","on","_parseHyperlinks","autodrain","fileStream","Symbol","asyncIterator","payload","xform","parseStream","_emitEntry","type","workbook","properties","map","workbookPr","model","text","richText","index","font","events","node","name","bold","charset","parseInt","attributes","color","rgb","argb","val","theme","family","italic","outline","size","underline","vertAlign","length","iterator","id","worksheetReader","matchingRel","find","rel","Target","matchingSheet","sheets","sheet","rId","Id","state","hyperlinksReader","Options","module","exports"],"sources":["../../../../lib/stream/xlsx/workbook-reader.js"],"sourcesContent":["const fs = require('fs');\nconst {EventEmitter} = require('events');\nconst {PassThrough, Readable} = require('readable-stream');\nconst nodeStream = require('stream');\nconst unzip = require('unzipper');\nconst tmp = require('tmp');\nconst iterateStream = require('../../utils/iterate-stream');\nconst parseSax = require('../../utils/parse-sax');\n\nconst StyleManager = require('../../xlsx/xform/style/styles-xform');\nconst WorkbookXform = require('../../xlsx/xform/book/workbook-xform');\nconst RelationshipsXform = require('../../xlsx/xform/core/relationships-xform');\n\nconst WorksheetReader = require('./worksheet-reader');\nconst HyperlinkReader = require('./hyperlink-reader');\n\ntmp.setGracefulCleanup();\n\nclass WorkbookReader extends EventEmitter {\n  constructor(input, options = {}) {\n    super();\n\n    this.input = input;\n\n    this.options = {\n      worksheets: 'emit',\n      sharedStrings: 'cache',\n      hyperlinks: 'ignore',\n      styles: 'ignore',\n      entries: 'ignore',\n      ...options,\n    };\n\n    this.styles = new StyleManager();\n    this.styles.init();\n  }\n\n  _getStream(input) {\n    if (input instanceof nodeStream.Readable || input instanceof Readable) {\n      return input;\n    }\n    if (typeof input === 'string') {\n      return fs.createReadStream(input);\n    }\n    throw new Error(`Could not recognise input: ${input}`);\n  }\n\n  async read(input, options) {\n    try {\n      for await (const {eventType, value} of this.parse(input, options)) {\n        switch (eventType) {\n          case 'shared-strings':\n            this.emit(eventType, value);\n            break;\n          case 'worksheet':\n            this.emit(eventType, value);\n            await value.read();\n            break;\n          case 'hyperlinks':\n            this.emit(eventType, value);\n            break;\n        }\n      }\n      this.emit('end');\n      this.emit('finished');\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const {eventType, value} of this.parse()) {\n      if (eventType === 'worksheet') {\n        yield value;\n      }\n    }\n  }\n\n  async *parse(input, options) {\n    if (options) this.options = options;\n    const stream = (this.stream = this._getStream(input || this.input));\n    const zip = unzip.Parse({forceStream: true});\n    stream.pipe(zip);\n\n    // worksheets, deferred for parsing after shared strings reading\n    const waitingWorkSheets = [];\n\n    for await (const entry of iterateStream(zip)) {\n      let match;\n      let sheetNo;\n      switch (entry.path) {\n        case '_rels/.rels':\n          break;\n        case 'xl/_rels/workbook.xml.rels':\n          await this._parseRels(entry);\n          break;\n        case 'xl/workbook.xml':\n          await this._parseWorkbook(entry);\n          break;\n        case 'xl/sharedStrings.xml':\n          yield* this._parseSharedStrings(entry);\n          break;\n        case 'xl/styles.xml':\n          await this._parseStyles(entry);\n          break;\n        default:\n          if (entry.path.match(/xl\\/worksheets\\/sheet\\d+[.]xml/)) {\n            match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n            sheetNo = match[1];\n            if (this.sharedStrings && this.workbookRels) {\n              yield* this._parseWorksheet(iterateStream(entry), sheetNo);\n            } else {\n              // create temp file for each worksheet\n              await new Promise((resolve, reject) => {\n                tmp.file((err, path, fd, tempFileCleanupCallback) => {\n                  if (err) {\n                    return reject(err);\n                  }\n                  waitingWorkSheets.push({sheetNo, path, tempFileCleanupCallback});\n\n                  const tempStream = fs.createWriteStream(path);\n                  entry.pipe(tempStream);\n                  return tempStream.on('finish', () => {\n                    return resolve();\n                  });\n                });\n              });\n            }\n          } else if (entry.path.match(/xl\\/worksheets\\/_rels\\/sheet\\d+[.]xml.rels/)) {\n            match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n            sheetNo = match[1];\n            yield* this._parseHyperlinks(iterateStream(entry), sheetNo);\n          }\n          break;\n      }\n      entry.autodrain();\n    }\n\n    for (const {sheetNo, path, tempFileCleanupCallback} of waitingWorkSheets) {\n      let fileStream = fs.createReadStream(path);\n      // TODO: Remove once node v8 is deprecated\n      // Detect and upgrade old fileStreams\n      if (!fileStream[Symbol.asyncIterator]) {\n        fileStream = fileStream.pipe(new PassThrough());\n      }\n      yield* this._parseWorksheet(fileStream, sheetNo);\n      tempFileCleanupCallback();\n    }\n  }\n\n  _emitEntry(payload) {\n    if (this.options.entries === 'emit') {\n      this.emit('entry', payload);\n    }\n  }\n\n  async _parseRels(entry) {\n    const xform = new RelationshipsXform();\n    this.workbookRels = await xform.parseStream(iterateStream(entry));\n  }\n\n  async _parseWorkbook(entry) {\n    this._emitEntry({type: 'workbook'});\n\n    const workbook = new WorkbookXform();\n    await workbook.parseStream(iterateStream(entry));\n\n    this.properties = workbook.map.workbookPr;\n    this.model = workbook.model;\n  }\n\n  async *_parseSharedStrings(entry) {\n    this._emitEntry({type: 'shared-strings'});\n    switch (this.options.sharedStrings) {\n      case 'cache':\n        this.sharedStrings = [];\n        break;\n      case 'emit':\n        break;\n      default:\n        return;\n    }\n\n    let text = null;\n    let richText = [];\n    let index = 0;\n    let font = null;\n    for await (const events of parseSax(iterateStream(entry))) {\n      for (const {eventType, value} of events) {\n        if (eventType === 'opentag') {\n          const node = value;\n          switch (node.name) {\n            case 'b':\n              font = font || {};\n              font.bold = true;\n              break;\n            case 'charset':\n              font = font || {};\n              font.charset = parseInt(node.attributes.charset, 10);\n              break;\n            case 'color':\n              font = font || {};\n              font.color = {};\n              if (node.attributes.rgb) {\n                font.color.argb = node.attributes.argb;\n              }\n              if (node.attributes.val) {\n                font.color.argb = node.attributes.val;\n              }\n              if (node.attributes.theme) {\n                font.color.theme = node.attributes.theme;\n              }\n              break;\n            case 'family':\n              font = font || {};\n              font.family = parseInt(node.attributes.val, 10);\n              break;\n            case 'i':\n              font = font || {};\n              font.italic = true;\n              break;\n            case 'outline':\n              font = font || {};\n              font.outline = true;\n              break;\n            case 'rFont':\n              font = font || {};\n              font.name = node.value;\n              break;\n            case 'si':\n              font = null;\n              richText = [];\n              text = null;\n              break;\n            case 'sz':\n              font = font || {};\n              font.size = parseInt(node.attributes.val, 10);\n              break;\n            case 'strike':\n              break;\n            case 't':\n              text = null;\n              break;\n            case 'u':\n              font = font || {};\n              font.underline = true;\n              break;\n            case 'vertAlign':\n              font = font || {};\n              font.vertAlign = node.attributes.val;\n              break;\n          }\n        } else if (eventType === 'text') {\n          text = text ? text + value : value;\n        } else if (eventType === 'closetag') {\n          const node = value;\n          switch (node.name) {\n            case 'r':\n              richText.push({\n                font,\n                text,\n              });\n\n              font = null;\n              text = null;\n              break;\n            case 'si':\n              if (this.options.sharedStrings === 'cache') {\n                this.sharedStrings.push(richText.length ? {richText} : text);\n              } else if (this.options.sharedStrings === 'emit') {\n                yield {index: index++, text: richText.length ? {richText} : text};\n              }\n\n              richText = [];\n              font = null;\n              text = null;\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  async _parseStyles(entry) {\n    this._emitEntry({type: 'styles'});\n    if (this.options.styles === 'cache') {\n      this.styles = new StyleManager();\n      await this.styles.parseStream(iterateStream(entry));\n    }\n  }\n\n  *_parseWorksheet(iterator, sheetNo) {\n    this._emitEntry({type: 'worksheet', id: sheetNo});\n    const worksheetReader = new WorksheetReader({\n      workbook: this,\n      id: sheetNo,\n      iterator,\n      options: this.options,\n    });\n\n    const matchingRel = (this.workbookRels || []).find(\n      rel => rel.Target === `worksheets/sheet${sheetNo}.xml`\n    );\n    const matchingSheet =\n      matchingRel && (this.model.sheets || []).find(sheet => sheet.rId === matchingRel.Id);\n    if (matchingSheet) {\n      worksheetReader.id = matchingSheet.id;\n      worksheetReader.name = matchingSheet.name;\n      worksheetReader.state = matchingSheet.state;\n    }\n    if (this.options.worksheets === 'emit') {\n      yield {eventType: 'worksheet', value: worksheetReader};\n    }\n  }\n\n  *_parseHyperlinks(iterator, sheetNo) {\n    this._emitEntry({type: 'hyperlinks', id: sheetNo});\n    const hyperlinksReader = new HyperlinkReader({\n      workbook: this,\n      id: sheetNo,\n      iterator,\n      options: this.options,\n    });\n    if (this.options.hyperlinks === 'emit') {\n      yield {eventType: 'hyperlinks', value: hyperlinksReader};\n    }\n  }\n}\n\n// for reference - these are the valid values for options\nWorkbookReader.Options = {\n  worksheets: ['emit', 'ignore'],\n  sharedStrings: ['cache', 'emit', 'ignore'],\n  hyperlinks: ['cache', 'emit', 'ignore'],\n  styles: ['cache', 'ignore'],\n  entries: ['emit', 'ignore'],\n};\n\nmodule.exports = WorkbookReader;\n"],"mappings":"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"}