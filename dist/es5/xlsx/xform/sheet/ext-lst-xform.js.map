{"version":3,"file":"ext-lst-xform.js","names":["CompositeXform","require","ConditionalFormattingsExt","ExtXform","map","conditionalFormattings","model","hasContent","options","prepare","xmlStream","openNode","uri","render","closeNode","name","parser","ExtLstXform","ext","Object","assign","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/ext-lst-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst CompositeXform = require('../composite-xform');\n\nconst ConditionalFormattingsExt = require('./cf-ext/conditional-formattings-ext-xform');\n\nclass ExtXform extends CompositeXform {\n  constructor() {\n    super();\n    this.map = {\n      'x14:conditionalFormattings': (this.conditionalFormattings = new ConditionalFormattingsExt()),\n    };\n  }\n\n  get tag() {\n    return 'ext';\n  }\n\n  hasContent(model) {\n    return this.conditionalFormattings.hasContent(model.conditionalFormattings);\n  }\n\n  prepare(model, options) {\n    this.conditionalFormattings.prepare(model.conditionalFormattings, options);\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('ext', {\n      uri: '{78C0D931-6437-407d-A8EE-F0AAD7539E65}',\n      'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n    });\n\n    this.conditionalFormattings.render(xmlStream, model.conditionalFormattings);\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel() {\n    return {};\n  }\n\n  onParserClose(name, parser) {\n    this.model[name] = parser.model;\n  }\n}\n\nclass ExtLstXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      ext: (this.ext = new ExtXform()),\n    };\n  }\n\n  get tag() {\n    return 'extLst';\n  }\n\n  prepare(model, options) {\n    this.ext.prepare(model, options);\n  }\n\n  hasContent(model) {\n    return this.ext.hasContent(model);\n  }\n\n  render(xmlStream, model) {\n    if (!this.hasContent(model)) {\n      return;\n    }\n\n    xmlStream.openNode('extLst');\n    this.ext.render(xmlStream, model);\n    xmlStream.closeNode();\n  }\n\n  createNewModel() {\n    return {};\n  }\n\n  onParserClose(name, parser) {\n    Object.assign(this.model, parser.model);\n  }\n}\n\nmodule.exports = ExtLstXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,IAAMA,cAAc,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEpD,IAAMC,yBAAyB,GAAGD,OAAO,CAAC,4CAA4C,CAAC;AAAC,IAElFE,QAAQ;EAAA;EAAA;EACZ,oBAAc;IAAA;IAAA;IACZ;IACA,MAAKC,GAAG,GAAG;MACT,4BAA4B,EAAG,MAAKC,sBAAsB,GAAG,IAAIH,yBAAyB;IAC5F,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,KAED,eAAU;MACR,OAAO,KAAK;IACd;EAAC;IAAA;IAAA,OAED,oBAAWI,KAAK,EAAE;MAChB,OAAO,IAAI,CAACD,sBAAsB,CAACE,UAAU,CAACD,KAAK,CAACD,sBAAsB,CAAC;IAC7E;EAAC;IAAA;IAAA,OAED,iBAAQC,KAAK,EAAEE,OAAO,EAAE;MACtB,IAAI,CAACH,sBAAsB,CAACI,OAAO,CAACH,KAAK,CAACD,sBAAsB,EAAEG,OAAO,CAAC;IAC5E;EAAC;IAAA;IAAA,OAED,gBAAOE,SAAS,EAAEJ,KAAK,EAAE;MACvBI,SAAS,CAACC,QAAQ,CAAC,KAAK,EAAE;QACxBC,GAAG,EAAE,wCAAwC;QAC7C,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACP,sBAAsB,CAACQ,MAAM,CAACH,SAAS,EAAEJ,KAAK,CAACD,sBAAsB,CAAC;MAE3EK,SAAS,CAACI,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,0BAAiB;MACf,OAAO,CAAC,CAAC;IACX;EAAC;IAAA;IAAA,OAED,uBAAcC,IAAI,EAAEC,MAAM,EAAE;MAC1B,IAAI,CAACV,KAAK,CAACS,IAAI,CAAC,GAAGC,MAAM,CAACV,KAAK;IACjC;EAAC;EAAA;AAAA,EArCoBN,cAAc;AAAA,IAwC/BiB,WAAW;EAAA;EAAA;EACf,uBAAc;IAAA;IAAA;IACZ;IAEA,OAAKb,GAAG,GAAG;MACTc,GAAG,EAAG,OAAKA,GAAG,GAAG,IAAIf,QAAQ;IAC/B,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,KAED,eAAU;MACR,OAAO,QAAQ;IACjB;EAAC;IAAA;IAAA,OAED,iBAAQG,KAAK,EAAEE,OAAO,EAAE;MACtB,IAAI,CAACU,GAAG,CAACT,OAAO,CAACH,KAAK,EAAEE,OAAO,CAAC;IAClC;EAAC;IAAA;IAAA,OAED,oBAAWF,KAAK,EAAE;MAChB,OAAO,IAAI,CAACY,GAAG,CAACX,UAAU,CAACD,KAAK,CAAC;IACnC;EAAC;IAAA;IAAA,OAED,gBAAOI,SAAS,EAAEJ,KAAK,EAAE;MACvB,IAAI,CAAC,IAAI,CAACC,UAAU,CAACD,KAAK,CAAC,EAAE;QAC3B;MACF;MAEAI,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAC;MAC5B,IAAI,CAACO,GAAG,CAACL,MAAM,CAACH,SAAS,EAAEJ,KAAK,CAAC;MACjCI,SAAS,CAACI,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,0BAAiB;MACf,OAAO,CAAC,CAAC;IACX;EAAC;IAAA;IAAA,OAED,uBAAcC,IAAI,EAAEC,MAAM,EAAE;MAC1BG,MAAM,CAACC,MAAM,CAAC,IAAI,CAACd,KAAK,EAAEU,MAAM,CAACV,KAAK,CAAC;IACzC;EAAC;EAAA;AAAA,EArCuBN,cAAc;AAwCxCqB,MAAM,CAACC,OAAO,GAAGL,WAAW"}