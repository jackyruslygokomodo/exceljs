{"version":3,"file":"worksheet.js","names":["_","require","colCache","Range","Row","Column","Enums","Image","Table","DataValidations","Encryptor","copyStyle","Worksheet","options","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","_workbook","workbook","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","headerFooter","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","dataValidations","views","autoFilter","_media","sheetProtection","tables","conditionalFormattings","removeWorksheetEx","dimensions","forEach","row","rowDims","expand","number","min","max","value","_headerRowCount","reduce","pv","cv","headerCount","headers","length","Math","count","columns","defn","column","push","key","f","each","c","col","l2n","n","start","rows","nRows","inserts","rowArguments","insert","i","getRow","splice","apply","r","nExpand","nKeep","nEnd","getColumn","definedNames","spliceColumns","columnCount","maxCount","eachRow","cellCount","counts","eachCell","_lastRowNumber","slice","style","rowNo","_nextRow","values","_setStyleOption","addRow","pos","spliceRows","findRow","_copyStyle","getRows","src","dest","styleEmpty","rSrc","rDst","includeEmpty","cell","colNumber","getCell","height","rowNum","Array","fill","nInserts","_value","constructor","cellToBeMerged","_row","_number","prevMaster","_master","newMaster","_column","merge","iteratee","hasValues","address","getAddress","findCell","getCellEx","cells","_mergeCellsInternal","ignoreStyle","intersects","Error","master","j","unmerge","some","Boolean","type","ValueType","Merge","_unMergeMaster","range","formula","results","shareType","decoded","decode","width","masterAddress","encodeAddress","isShared","getResult","isArray","first","ref","result","sharedFormula","imageId","model","filter","m","image","find","password","Promise","resolve","sheet","spinCount","Number","isFinite","round","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","table","cf","Function","console","trace","tabColor","media","map","medium","cols","toModel","rowModel","merges","fromModel","_parseRows","_parseMergeCells","t","mergeCells","mergeCellsWithoutStyle","module","exports"],"sources":["../../../lib/doc/worksheet.js"],"sourcesContent":["const _ = require('../utils/under-dash');\n\nconst colCache = require('../utils/col-cache');\nconst Range = require('./range');\nconst Row = require('./row');\nconst Column = require('./column');\nconst Enums = require('./enums');\nconst Image = require('./image');\nconst Table = require('./table');\nconst DataValidations = require('./data-validations');\nconst Encryptor = require('../utils/encryptor');\nconst {copyStyle} = require('../utils/copy-style');\n\n// Worksheet requirements\n//  Operate as sheet inside workbook or standalone\n//  Load and Save from file and stream\n//  Access/Add/Delete individual cells\n//  Manage column widths and row heights\n\nclass Worksheet {\n  constructor(options) {\n    options = options || {};\n\n    // in a workbook, each sheet will have a number\n    this.id = options.id;\n    this.orderNo = options.orderNo;\n\n    // and a name\n    this.name = options.name || `Sheet${this.id}`;\n\n    // add a state\n    this.state = options.state || 'visible';\n\n    // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\n    // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\n    this._rows = [];\n\n    // column definitions\n    this._columns = null;\n\n    // column keys (addRow convenience): key ==> this._collumns index\n    this._keys = {};\n\n    // keep record of all merges\n    this._merges = {};\n\n    // record of all row and column pageBreaks\n    this.rowBreaks = [];\n\n    this._workbook = options.workbook;\n\n    // for tabColor, default row height, outline levels, etc\n    this.properties = Object.assign(\n      {},\n      {\n        defaultRowHeight: 15,\n        dyDescent: 55,\n        outlineLevelCol: 0,\n        outlineLevelRow: 0,\n      },\n      options.properties\n    );\n\n    // for all things printing\n    this.pageSetup = Object.assign(\n      {},\n      {\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\n        orientation: 'portrait',\n        horizontalDpi: 4294967295,\n        verticalDpi: 4294967295,\n        fitToPage: !!(\n          options.pageSetup &&\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\n          !options.pageSetup.scale\n        ),\n        pageOrder: 'downThenOver',\n        blackAndWhite: false,\n        draft: false,\n        cellComments: 'None',\n        errors: 'displayed',\n        scale: 100,\n        fitToWidth: 1,\n        fitToHeight: 1,\n        paperSize: undefined,\n        showRowColHeaders: false,\n        showGridLines: false,\n        firstPageNumber: undefined,\n        horizontalCentered: false,\n        verticalCentered: false,\n        rowBreaks: null,\n        colBreaks: null,\n      },\n      options.pageSetup\n    );\n\n    this.headerFooter = Object.assign(\n      {},\n      {\n        differentFirst: false,\n        differentOddEven: false,\n        oddHeader: null,\n        oddFooter: null,\n        evenHeader: null,\n        evenFooter: null,\n        firstHeader: null,\n        firstFooter: null,\n      },\n      options.headerFooter\n    );\n\n    this.dataValidations = new DataValidations();\n\n    // for freezepanes, split, zoom, gridlines, etc\n    this.views = options.views || [];\n\n    this.autoFilter = options.autoFilter || null;\n\n    // for images, etc\n    this._media = [];\n\n    // worksheet protection\n    this.sheetProtection = null;\n\n    // for tables\n    this.tables = {};\n\n    this.conditionalFormattings = [];\n  }\n\n  get workbook() {\n    return this._workbook;\n  }\n\n  // when you're done with this worksheet, call this to remove from workbook\n  destroy() {\n    this._workbook.removeWorksheetEx(this);\n  }\n\n  // Get the bounding range of the cells in this worksheet\n  get dimensions() {\n    const dimensions = new Range();\n    this._rows.forEach(row => {\n      if (row) {\n        const rowDims = row.dimensions;\n        if (rowDims) {\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\n        }\n      }\n    });\n    return dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  spliceColumns(start, count, ...inserts) {\n    const rows = this._rows;\n    const nRows = rows.length;\n    if (inserts.length > 0) {\n      // must iterate over all rows whether they exist yet or not\n      for (let i = 0; i < nRows; i++) {\n        const rowArguments = [start, count];\n        // eslint-disable-next-line no-loop-func\n        inserts.forEach(insert => {\n          rowArguments.push(insert[i] || null);\n        });\n        const row = this.getRow(i + 1);\n        // eslint-disable-next-line prefer-spread\n        row.splice.apply(row, rowArguments);\n      }\n    } else {\n      // nothing to insert, so just splice all rows\n      this._rows.forEach(r => {\n        if (r) {\n          r.splice(start, count);\n        }\n      });\n    }\n\n    // splice column definitions\n    const nExpand = inserts.length - count;\n    const nKeep = start + count;\n    const nEnd = this._columns.length;\n    if (nExpand < 0) {\n      for (let i = start + inserts.length; i <= nEnd; i++) {\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\n      }\n    } else if (nExpand > 0) {\n      for (let i = nEnd; i >= nKeep; i--) {\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\n      }\n    }\n    for (let i = start; i < start + inserts.length; i++) {\n      this.getColumn(i).defn = null;\n    }\n\n    // account for defined names\n    this.workbook.definedNames.spliceColumns(this.name, start, count, inserts.length);\n  }\n\n  get lastColumn() {\n    return this.getColumn(this.columnCount);\n  }\n\n  get columnCount() {\n    let maxCount = 0;\n    this.eachRow(row => {\n      maxCount = Math.max(maxCount, row.cellCount);\n    });\n    return maxCount;\n  }\n\n  get actualColumnCount() {\n    // performance nightmare - for each row, counts all the columns used\n    const counts = [];\n    let count = 0;\n    this.eachRow(row => {\n      row.eachCell(({col}) => {\n        if (!counts[col]) {\n          counts[col] = true;\n          count++;\n        }\n      });\n    });\n    return count;\n  }\n\n  // =========================================================================\n  // Rows\n\n  _commitRow() {\n    // nop - allows streaming reader to fill a document\n  }\n\n  get _lastRowNumber() {\n    // need to cope with results of splice\n    const rows = this._rows;\n    let n = rows.length;\n    while (n > 0 && rows[n - 1] === undefined) {\n      n--;\n    }\n    return n;\n  }\n\n  get _nextRow() {\n    return this._lastRowNumber + 1;\n  }\n\n  get lastRow() {\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  }\n\n  // find a row (if exists) by row number\n  findRow(r) {\n    return this._rows[r - 1];\n  }\n\n  // find multiple rows (if exists) by row number\n  findRows(start, length) {\n    return this._rows.slice(start - 1, start - 1 + length);\n  }\n\n  get rowCount() {\n    return this._lastRowNumber;\n  }\n\n  get actualRowCount() {\n    // counts actual rows that have actual data\n    let count = 0;\n    this.eachRow(() => {\n      count++;\n    });\n    return count;\n  }\n\n  // get a row by row number.\n  getRow(r) {\n    let row = this._rows[r - 1];\n    if (!row) {\n      row = this._rows[r - 1] = new Row(this, r);\n    }\n    return row;\n  }\n\n  // get multiple rows by row number.\n  getRows(start, length) {\n    if (length < 1) return undefined;\n    const rows = [];\n    for (let i = start; i < start + length; i++) {\n      rows.push(this.getRow(i));\n    }\n    return rows;\n  }\n\n  addRow(value, style = 'n') {\n    const rowNo = this._nextRow;\n    const row = this.getRow(rowNo);\n    row.values = value;\n    this._setStyleOption(rowNo, style[0] === 'i' ? style : 'n');\n    return row;\n  }\n\n  addRows(value, style = 'n') {\n    const rows = [];\n    value.forEach(row => {\n      rows.push(this.addRow(row, style));\n    });\n    return rows;\n  }\n\n  insertRow(pos, value, style = 'n') {\n    this.spliceRows(pos, 0, value);\n    this._setStyleOption(pos, style);\n    return this.getRow(pos);\n  }\n\n  insertRows(pos, values, style = 'n') {\n    this.spliceRows(pos, 0, ...values);\n    if (style !== 'n') {\n      // copy over the styles\n      for (let i = 0; i < values.length; i++) {\n        if (style[0] === 'o' && this.findRow(values.length + pos + i) !== undefined) {\n          this._copyStyle(values.length + pos + i, pos + i, style[1] === '+');\n        } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\n          this._copyStyle(pos - 1, pos + i, style[1] === '+');\n        }\n      }\n    }\n    return this.getRows(pos, values.length);\n  }\n\n  // set row at position to same style as of either pervious row (option 'i') or next row (option 'o')\n  _setStyleOption(pos, style = 'n') {\n    if (style[0] === 'o' && this.findRow(pos + 1) !== undefined) {\n      this._copyStyle(pos + 1, pos, style[1] === '+');\n    } else if (style[0] === 'i' && this.findRow(pos - 1) !== undefined) {\n      this._copyStyle(pos - 1, pos, style[1] === '+');\n    }\n  }\n\n  _copyStyle(src, dest, styleEmpty = false) {\n    const rSrc = this.getRow(src);\n    const rDst = this.getRow(dest);\n    rDst.style = copyStyle(rSrc.style);\n    // eslint-disable-next-line no-loop-func\n    rSrc.eachCell({includeEmpty: styleEmpty}, (cell, colNumber) => {\n      rDst.getCell(colNumber).style = copyStyle(cell.style);\n    });\n    rDst.height = rSrc.height;\n  }\n\n  duplicateRow(rowNum, count, insert = false) {\n    // create count duplicates of rowNum\n    // either inserting new or overwriting existing rows\n\n    const rSrc = this._rows[rowNum - 1];\n    const inserts = new Array(count).fill(rSrc.values);\n    this.spliceRows(rowNum + 1, insert ? 0 : count, ...inserts);\n\n    // now copy styles...\n    for (let i = 0; i < count; i++) {\n      const rDst = this._rows[rowNum + i];\n      rDst.style = rSrc.style;\n      rDst.height = rSrc.height;\n      // eslint-disable-next-line no-loop-func\n      rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n        rDst.getCell(colNumber).style = cell.style;\n      });\n    }\n  }\n\n  spliceRows(start, count, ...inserts) {\n    // same problem as row.splice, except worse.\n    const nKeep = start + count;\n    const nInserts = inserts.length;\n    const nExpand = nInserts - count;\n    const nEnd = this._rows.length;\n    let i;\n    let rSrc;\n    if (nExpand < 0) {\n      // remove rows\n      for (i = nKeep; i <= nEnd; i++) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          const rDst = this.getRow(i + nExpand);\n          rDst.values = rSrc.values;\n          rDst.style = rSrc.style;\n          rDst.height = rSrc.height;\n          // eslint-disable-next-line no-loop-func\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n            rDst.getCell(colNumber).style = cell.style;\n          });\n          this._rows[i - 1] = undefined;\n        } else {\n          this._rows[i + nExpand - 1] = undefined;\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          const rDst = this.getRow(i + nExpand);\n          rDst.values = rSrc.values;\n          rDst.style = rSrc.style;\n          rDst.height = rSrc.height;\n          // eslint-disable-next-line no-loop-func\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n            rDst.getCell(colNumber).style = cell.style;\n\n            // remerge cells accounting for insert offset\n            if (cell._value.constructor.name === 'MergeValue') {\n              const cellToBeMerged = this.getRow(cell._row._number + nInserts).getCell(colNumber);\n              const prevMaster = cell._value._master;\n              const newMaster = this.getRow(prevMaster._row._number + nInserts).getCell(prevMaster._column._number);\n              cellToBeMerged.merge(newMaster);\n            }\n          });\n        } else {\n          this._rows[i + nExpand - 1] = undefined;\n        }\n      }\n    }\n\n    // now copy over the new values\n    for (i = 0; i < nInserts; i++) {\n      const rDst = this.getRow(start + i);\n      rDst.style = {};\n      rDst.values = inserts[i];\n    }\n\n    // account for defined names\n    this.workbook.definedNames.spliceRows(this.name, start, count, nInserts);\n  }\n\n  // iterate over every row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._rows.length;\n      for (let i = 1; i <= n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row && row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  }\n\n  // return all rows as sparse array\n  getSheetValues() {\n    const rows = [];\n    this._rows.forEach(row => {\n      if (row) {\n        rows[row.number] = row.values;\n      }\n    });\n    return rows;\n  }\n\n  // =========================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this._rows[address.row - 1];\n    return row ? row.findCell(address.col) : undefined;\n  }\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  }\n\n  // =========================================================================\n  // Merge\n\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\n  mergeCells(...cells) {\n    const dimensions = new Range(cells);\n    this._mergeCellsInternal(dimensions);\n  }\n\n  mergeCellsWithoutStyle(...cells) {\n    const dimensions = new Range(cells);\n    this._mergeCellsInternal(dimensions, true);\n  }\n\n  _mergeCellsInternal(dimensions, ignoreStyle) {\n    // check cells aren't already merged\n    _.each(this._merges, merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        // merge all but the master cell\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master, ignoreStyle);\n        }\n      }\n    }\n\n    // index merge\n    this._merges[master.address] = dimensions;\n  }\n\n  _unMergeMaster(master) {\n    // master is always top left of a rectangle\n    const merge = this._merges[master.address];\n    if (merge) {\n      for (let i = merge.top; i <= merge.bottom; i++) {\n        for (let j = merge.left; j <= merge.right; j++) {\n          this.getCell(i, j).unmerge();\n        }\n      }\n      delete this._merges[master.address];\n    }\n  }\n\n  get hasMerges() {\n    // return true if this._merges has a merge object\n    return _.some(this._merges, Boolean);\n  }\n\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\n  // atomic - either they're all merged or all un-merged.\n  unMergeCells(...cells) {\n    const dimensions = new Range(cells);\n\n    // find any cells in that range and unmerge them\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        const cell = this.findCell(i, j);\n        if (cell) {\n          if (cell.type === Enums.ValueType.Merge) {\n            // this cell merges to another master\n            this._unMergeMaster(cell.master);\n          } else if (this._merges[cell.address]) {\n            // this cell is a master\n            this._unMergeMaster(cell);\n          }\n        }\n      }\n    }\n  }\n\n  // ===========================================================================\n  // Shared/Array Formula\n  fillFormula(range, formula, results, shareType = 'shared') {\n    // Define formula for top-left cell and share to rest\n    const decoded = colCache.decode(range);\n    const {top, left, bottom, right} = decoded;\n    const width = right - left + 1;\n    const masterAddress = colCache.encodeAddress(top, left);\n    const isShared = shareType === 'shared';\n\n    // work out result accessor\n    let getResult;\n    if (typeof results === 'function') {\n      getResult = results;\n    } else if (Array.isArray(results)) {\n      if (Array.isArray(results[0])) {\n        getResult = (row, col) => results[row - top][col - left];\n      } else {\n        // eslint-disable-next-line no-mixed-operators\n        getResult = (row, col) => results[(row - top) * width + (col - left)];\n      }\n    } else {\n      getResult = () => undefined;\n    }\n    let first = true;\n    for (let r = top; r <= bottom; r++) {\n      for (let c = left; c <= right; c++) {\n        if (first) {\n          this.getCell(r, c).value = {\n            shareType,\n            formula,\n            ref: range,\n            result: getResult(r, c),\n          };\n          first = false;\n        } else {\n          this.getCell(r, c).value = isShared\n            ? {\n                sharedFormula: masterAddress,\n                result: getResult(r, c),\n              }\n            : getResult(r, c);\n        }\n      }\n    }\n  }\n\n  // =========================================================================\n  // Images\n  addImage(imageId, range) {\n    const model = {\n      type: 'image',\n      imageId,\n      range,\n    };\n    this._media.push(new Image(this, model));\n  }\n\n  getImages() {\n    return this._media.filter(m => m.type === 'image');\n  }\n\n  addBackgroundImage(imageId) {\n    const model = {\n      type: 'background',\n      imageId,\n    };\n    this._media.push(new Image(this, model));\n  }\n\n  getBackgroundImageId() {\n    const image = this._media.find(m => m.type === 'background');\n    return image && image.imageId;\n  }\n\n  // =========================================================================\n  // Worksheet Protection\n  protect(password, options) {\n    // TODO: make this function truly async\n    // perhaps marshal to worker thread or something\n    return new Promise(resolve => {\n      this.sheetProtection = {\n        sheet: true,\n      };\n      if (options && 'spinCount' in options) {\n        // force spinCount to be integer >= 0\n        options.spinCount = Number.isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\n      }\n      if (password) {\n        this.sheetProtection.algorithmName = 'SHA-512';\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(\n          password,\n          'SHA512',\n          this.sheetProtection.saltValue,\n          this.sheetProtection.spinCount\n        );\n      }\n      if (options) {\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\n        if (!password && 'spinCount' in options) {\n          delete this.sheetProtection.spinCount;\n        }\n      }\n      resolve();\n    });\n  }\n\n  unprotect() {\n    this.sheetProtection = null;\n  }\n\n  // =========================================================================\n  // Tables\n  addTable(model) {\n    const table = new Table(this, model);\n    this.tables[model.name] = table;\n    return table;\n  }\n\n  getTable(name) {\n    return this.tables[name];\n  }\n\n  removeTable(name) {\n    delete this.tables[name];\n  }\n\n  getTables() {\n    return Object.values(this.tables);\n  }\n\n  // ===========================================================================\n  // Conditional Formatting\n  addConditionalFormatting(cf) {\n    this.conditionalFormattings.push(cf);\n  }\n\n  removeConditionalFormatting(filter) {\n    if (typeof filter === 'number') {\n      this.conditionalFormattings.splice(filter, 1);\n    } else if (filter instanceof Function) {\n      this.conditionalFormattings = this.conditionalFormattings.filter(filter);\n    } else {\n      this.conditionalFormattings = [];\n    }\n  }\n\n  // ===========================================================================\n  // Deprecated\n  get tabColor() {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    return this.properties.tabColor;\n  }\n\n  set tabColor(value) {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    this.properties.tabColor = value;\n  }\n\n  // ===========================================================================\n  // Model\n\n  get model() {\n    const model = {\n      id: this.id,\n      name: this.name,\n      dataValidations: this.dataValidations.model,\n      properties: this.properties,\n      state: this.state,\n      pageSetup: this.pageSetup,\n      headerFooter: this.headerFooter,\n      rowBreaks: this.rowBreaks,\n      views: this.views,\n      autoFilter: this.autoFilter,\n      media: this._media.map(medium => medium.model),\n      sheetProtection: this.sheetProtection,\n      tables: Object.values(this.tables).map(table => table.model),\n      conditionalFormattings: this.conditionalFormattings,\n    };\n\n    // =================================================\n    // columns\n    model.cols = Column.toModel(this.columns);\n\n    // ==========================================================\n    // Rows\n    const rows = (model.rows = []);\n    const dimensions = (model.dimensions = new Range());\n    this._rows.forEach(row => {\n      const rowModel = row && row.model;\n      if (rowModel) {\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\n        rows.push(rowModel);\n      }\n    });\n\n    // ==========================================================\n    // Merges\n    model.merges = [];\n    _.each(this._merges, merge => {\n      model.merges.push(merge.range);\n    });\n\n    return model;\n  }\n\n  _parseRows(model) {\n    this._rows = [];\n    model.rows.forEach(rowModel => {\n      const row = new Row(this, rowModel.number);\n      this._rows[row.number - 1] = row;\n      row.model = rowModel;\n    });\n  }\n\n  _parseMergeCells(model) {\n    _.each(model.mergeCells, merge => {\n      // Do not merge styles when importing an Excel file\n      // since each cell may have different styles intentionally.\n      this.mergeCellsWithoutStyle(merge);\n    });\n  }\n\n  set model(value) {\n    this.name = value.name;\n    this._columns = Column.fromModel(this, value.cols);\n    this._parseRows(value);\n\n    this._parseMergeCells(value);\n    this.dataValidations = new DataValidations(value.dataValidations);\n    this.properties = value.properties;\n    this.pageSetup = value.pageSetup;\n    this.headerFooter = value.headerFooter;\n    this.views = value.views;\n    this.autoFilter = value.autoFilter;\n    this._media = value.media.map(medium => new Image(this, medium));\n    this.sheetProtection = value.sheetProtection;\n    this.tables = value.tables.reduce((tables, table) => {\n      const t = new Table();\n      t.model = table;\n      tables[table.name] = t;\n      return tables;\n    }, {});\n    this.conditionalFormattings = value.conditionalFormattings;\n  }\n}\n\nmodule.exports = Worksheet;\n"],"mappings":"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"}