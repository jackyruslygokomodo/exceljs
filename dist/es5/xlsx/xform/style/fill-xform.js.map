{"version":3,"file":"fill-xform.js","names":["BaseXform","require","ColorXform","StopXform","map","color","xmlStream","model","openNode","addAttribute","position","render","closeNode","node","parser","parseOpen","name","parseFloat","attributes","parseClose","undefined","PatternFillXform","fgColor","bgColor","pattern","type","patternType","text","parseText","GradientFillXform","stop","gradient","degree","center","left","right","top","bottom","stopXform","stops","forEach","stopModel","parseInt","push","FillXform","patternFill","gradientFill","addRollback","rollback","commit","value","validPatternValues","reduce","p","v","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/fill-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst BaseXform = require('../base-xform');\n\nconst ColorXform = require('./color-xform');\n\nclass StopXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      color: new ColorXform(),\n    };\n  }\n\n  get tag() {\n    return 'stop';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('stop');\n    xmlStream.addAttribute('position', model.position);\n    this.map.color.render(xmlStream, model.color);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'stop':\n        this.model = {\n          position: parseFloat(node.attributes.position),\n        };\n        return true;\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.color = this.parser.model;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nclass PatternFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      fgColor: new ColorXform('fgColor'),\n      bgColor: new ColorXform('bgColor'),\n    };\n  }\n\n  get name() {\n    return 'pattern';\n  }\n\n  get tag() {\n    return 'patternFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('patternFill');\n    xmlStream.addAttribute('patternType', model.pattern);\n    if (model.fgColor) {\n      this.map.fgColor.render(xmlStream, model.fgColor);\n    }\n    if (model.bgColor) {\n      this.map.bgColor.render(xmlStream, model.bgColor);\n    }\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'patternFill':\n        this.model = {\n          type: 'pattern',\n          pattern: node.attributes.patternType,\n        };\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        if (this.parser.model) {\n          this.model[name] = this.parser.model;\n        }\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nclass GradientFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      stop: new StopXform(),\n    };\n    // if (model) {\n    //   this.gradient = model.gradient;\n    //   if (model.center) {\n    //     this.center = model.center;\n    //   }\n    //   if (model.degree !== undefined) {\n    //     this.degree = model.degree;\n    //   }\n    //   this.stops = model.stops.map(function(stop) { return new StopXform(stop); });\n    // } else {\n    //   this.stops = [];\n    // }\n  }\n\n  get name() {\n    return 'gradient';\n  }\n\n  get tag() {\n    return 'gradientFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('gradientFill');\n    switch (model.gradient) {\n      case 'angle':\n        xmlStream.addAttribute('degree', model.degree);\n        break;\n      case 'path':\n        xmlStream.addAttribute('type', 'path');\n        if (model.center.left) {\n          xmlStream.addAttribute('left', model.center.left);\n          if (model.center.right === undefined) {\n            xmlStream.addAttribute('right', model.center.left);\n          }\n        }\n        if (model.center.right) {\n          xmlStream.addAttribute('right', model.center.right);\n        }\n        if (model.center.top) {\n          xmlStream.addAttribute('top', model.center.top);\n          if (model.center.bottom === undefined) {\n            xmlStream.addAttribute('bottom', model.center.top);\n          }\n        }\n        if (model.center.bottom) {\n          xmlStream.addAttribute('bottom', model.center.bottom);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    const stopXform = this.map.stop;\n    model.stops.forEach(stopModel => {\n      stopXform.render(xmlStream, stopModel);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'gradientFill': {\n        const model = (this.model = {\n          stops: [],\n        });\n        if (node.attributes.degree) {\n          model.gradient = 'angle';\n          model.degree = parseInt(node.attributes.degree, 10);\n        } else if (node.attributes.type === 'path') {\n          model.gradient = 'path';\n          model.center = {\n            left: node.attributes.left ? parseFloat(node.attributes.left) : 0,\n            top: node.attributes.top ? parseFloat(node.attributes.top) : 0,\n          };\n          if (node.attributes.right !== node.attributes.left) {\n            model.center.right = node.attributes.right ? parseFloat(node.attributes.right) : 0;\n          }\n          if (node.attributes.bottom !== node.attributes.top) {\n            model.center.bottom = node.attributes.bottom ? parseFloat(node.attributes.bottom) : 0;\n          }\n        }\n        return true;\n      }\n\n      case 'stop':\n        this.parser = this.map.stop;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.stops.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\n// Fill encapsulates translation from fill model to/from xlsx\nclass FillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      patternFill: new PatternFillXform(),\n      gradientFill: new GradientFillXform(),\n    };\n  }\n\n  get tag() {\n    return 'fill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.addRollback();\n    xmlStream.openNode('fill');\n    switch (model.type) {\n      case 'pattern':\n        this.map.patternFill.render(xmlStream, model);\n        break;\n      case 'gradient':\n        this.map.gradientFill.render(xmlStream, model);\n        break;\n      default:\n        xmlStream.rollback();\n        return;\n    }\n    xmlStream.closeNode();\n    xmlStream.commit();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'fill':\n        this.model = {};\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model = this.parser.model;\n        this.model.type = this.parser.name;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  validStyle(value) {\n    return FillXform.validPatternValues[value];\n  }\n}\n\nFillXform.validPatternValues = [\n  'none',\n  'solid',\n  'darkVertical',\n  'darkGray',\n  'mediumGray',\n  'lightGray',\n  'gray125',\n  'gray0625',\n  'darkHorizontal',\n  'darkVertical',\n  'darkDown',\n  'darkUp',\n  'darkGrid',\n  'darkTrellis',\n  'lightHorizontal',\n  'lightVertical',\n  'lightDown',\n  'lightUp',\n  'lightGrid',\n  'lightTrellis',\n  'lightGrid',\n].reduce((p, v) => {\n  p[v] = true;\n  return p;\n}, {});\n\nFillXform.StopXform = StopXform;\nFillXform.PatternFillXform = PatternFillXform;\nFillXform.GradientFillXform = GradientFillXform;\n\nmodule.exports = FillXform;\n"],"mappings":"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"}