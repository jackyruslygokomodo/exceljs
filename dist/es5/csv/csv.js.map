{"version":3,"file":"csv.js","names":["fs","require","fastCsv","customParseFormat","utc","dayjs","extend","StreamBuf","exists","SpecialValues","true","false","error","CSV","workbook","worksheet","filename","options","Error","stream","createReadStream","read","close","Promise","resolve","reject","addWorksheet","sheetName","dateFormats","map","datum","datumNumber","Number","isNaN","Infinity","dt","reduce","matchingDate","currentDateFormat","dayjsObj","isValid","Date","valueOf","special","undefined","csvStream","parse","parserOptions","on","data","addRow","emit","pipe","getWorksheet","sheetId","format","formatterOptions","dateFormat","dateUTC","value","text","hyperlink","formula","result","JSON","stringify","includeEmptyRows","lastRow","eachRow","row","rowNumber","write","values","shift","end","streamOptions","encoding","createWriteStream","module","exports"],"sources":["../../../lib/csv/csv.js"],"sourcesContent":["const fs = require('fs');\nconst fastCsv = require('fast-csv');\nconst customParseFormat = require('dayjs/plugin/customParseFormat');\nconst utc = require('dayjs/plugin/utc');\nconst dayjs = require('dayjs').extend(customParseFormat).extend(utc);\nconst StreamBuf = require('../utils/stream-buf');\n\nconst {\n  fs: {exists},\n} = require('../utils/utils');\n\n/* eslint-disable quote-props */\nconst SpecialValues = {\n  true: true,\n  false: false,\n  '#N/A': {error: '#N/A'},\n  '#REF!': {error: '#REF!'},\n  '#NAME?': {error: '#NAME?'},\n  '#DIV/0!': {error: '#DIV/0!'},\n  '#NULL!': {error: '#NULL!'},\n  '#VALUE!': {error: '#VALUE!'},\n  '#NUM!': {error: '#NUM!'},\n};\n/* eslint-ensable quote-props */\n\nclass CSV {\n  constructor(workbook) {\n    this.workbook = workbook;\n    this.worksheet = null;\n  }\n\n  async readFile(filename, options) {\n    options = options || {};\n    if (!(await exists(filename))) {\n      throw new Error(`File not found: ${filename}`);\n    }\n    const stream = fs.createReadStream(filename);\n    const worksheet = await this.read(stream, options);\n    stream.close();\n    return worksheet;\n  }\n\n  read(stream, options) {\n    options = options || {};\n\n    return new Promise((resolve, reject) => {\n      const worksheet = this.workbook.addWorksheet(options.sheetName);\n\n      const dateFormats = options.dateFormats || [\n        'YYYY-MM-DD[T]HH:mm:ssZ',\n        'YYYY-MM-DD[T]HH:mm:ss',\n        'MM-DD-YYYY',\n        'YYYY-MM-DD',\n      ];\n      const map =\n        options.map ||\n        function(datum) {\n          if (datum === '') {\n            return null;\n          }\n          const datumNumber = Number(datum);\n          if (!Number.isNaN(datumNumber) && datumNumber !== Infinity) {\n            return datumNumber;\n          }\n          const dt = dateFormats.reduce((matchingDate, currentDateFormat) => {\n            if (matchingDate) {\n              return matchingDate;\n            }\n            const dayjsObj = dayjs(datum, currentDateFormat, true);\n            if (dayjsObj.isValid()) {\n              return dayjsObj;\n            }\n            return null;\n          }, null);\n          if (dt) {\n            return new Date(dt.valueOf());\n          }\n          const special = SpecialValues[datum];\n          if (special !== undefined) {\n            return special;\n          }\n          return datum;\n        };\n\n      const csvStream = fastCsv\n        .parse(options.parserOptions)\n        .on('data', data => {\n          worksheet.addRow(data.map(map));\n        })\n        .on('end', () => {\n          csvStream.emit('worksheet', worksheet);\n        });\n\n      csvStream.on('worksheet', resolve).on('error', reject);\n\n      stream.pipe(csvStream);\n    });\n  }\n\n  /**\n   * @deprecated since version 4.0. You should use `CSV#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\n   */\n  createInputStream() {\n    throw new Error(\n      '`CSV#createInputStream` is deprecated. You should use `CSV#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\n    );\n  }\n\n  write(stream, options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      // const encoding = options.encoding || 'utf8';\n      // const separator = options.separator || ',';\n      // const quoteChar = options.quoteChar || '\\'';\n\n      const worksheet = this.workbook.getWorksheet(options.sheetName || options.sheetId);\n\n      const csvStream = fastCsv.format(options.formatterOptions);\n      stream.on('finish', () => {\n        resolve();\n      });\n      csvStream.on('error', reject);\n      csvStream.pipe(stream);\n\n      const {dateFormat, dateUTC} = options;\n      const map =\n        options.map ||\n        (value => {\n          if (value) {\n            if (value.text || value.hyperlink) {\n              return value.hyperlink || value.text || '';\n            }\n            if (value.formula || value.result) {\n              return value.result || '';\n            }\n            if (value instanceof Date) {\n              if (dateFormat) {\n                return dateUTC\n                  ? dayjs.utc(value).format(dateFormat)\n                  : dayjs(value).format(dateFormat);\n              }\n              return dateUTC ? dayjs.utc(value).format() : dayjs(value).format();\n            }\n            if (value.error) {\n              return value.error;\n            }\n            if (typeof value === 'object') {\n              return JSON.stringify(value);\n            }\n          }\n          return value;\n        });\n\n      const includeEmptyRows = options.includeEmptyRows === undefined || options.includeEmptyRows;\n      let lastRow = 1;\n      if (worksheet) {\n        worksheet.eachRow((row, rowNumber) => {\n          if (includeEmptyRows) {\n            while (lastRow++ < rowNumber - 1) {\n              csvStream.write([]);\n            }\n          }\n          const {values} = row;\n          values.shift();\n          csvStream.write(values.map(map));\n          lastRow = rowNumber;\n        });\n      }\n      csvStream.end();\n    });\n  }\n\n  writeFile(filename, options) {\n    options = options || {};\n\n    const streamOptions = {\n      encoding: options.encoding || 'utf8',\n    };\n    const stream = fs.createWriteStream(filename, streamOptions);\n\n    return this.write(stream, options);\n  }\n\n  async writeBuffer(options) {\n    const stream = new StreamBuf();\n    await this.write(stream, options);\n    return stream.read();\n  }\n}\n\nmodule.exports = CSV;\n"],"mappings":"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"}