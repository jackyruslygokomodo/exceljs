{"version":3,"file":"pic-xform.js","names":["BaseXform","require","StaticXform","BlipFillXform","NvPicPrXform","spPrJSON","PicXform","map","model","options","index","xmlStream","openNode","tag","render","closeNode","node","parser","parseOpen","name","reset","parseClose","mergeModel","undefined","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/pic-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\n\nconst BlipFillXform = require('./blip-fill-xform');\nconst NvPicPrXform = require('./nv-pic-pr-xform');\n\nconst spPrJSON = require('./sp-pr');\n\nclass PicXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'xdr:nvPicPr': new NvPicPrXform(),\n      'xdr:blipFill': new BlipFillXform(),\n      'xdr:spPr': new StaticXform(spPrJSON),\n    };\n  }\n\n  get tag() {\n    return 'xdr:pic';\n  }\n\n  prepare(model, options) {\n    model.index = options.index + 1;\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n\n    this.map['xdr:nvPicPr'].render(xmlStream, model);\n    this.map['xdr:blipFill'].render(xmlStream, model);\n    this.map['xdr:spPr'].render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.mergeModel(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n}\n\nmodule.exports = PicXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAME,aAAa,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAClD,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAEjD,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAAC,IAE9BK,QAAQ;EAAA;EAAA;EACZ,oBAAc;IAAA;IAAA;IACZ;IAEA,MAAKC,GAAG,GAAG;MACT,aAAa,EAAE,IAAIH,YAAY,EAAE;MACjC,cAAc,EAAE,IAAID,aAAa,EAAE;MACnC,UAAU,EAAE,IAAID,WAAW,CAACG,QAAQ;IACtC,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,KAED,eAAU;MACR,OAAO,SAAS;IAClB;EAAC;IAAA;IAAA,OAED,iBAAQG,KAAK,EAAEC,OAAO,EAAE;MACtBD,KAAK,CAACE,KAAK,GAAGD,OAAO,CAACC,KAAK,GAAG,CAAC;IACjC;EAAC;IAAA;IAAA,OAED,gBAAOC,SAAS,EAAEH,KAAK,EAAE;MACvBG,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACC,GAAG,CAAC;MAE5B,IAAI,CAACN,GAAG,CAAC,aAAa,CAAC,CAACO,MAAM,CAACH,SAAS,EAAEH,KAAK,CAAC;MAChD,IAAI,CAACD,GAAG,CAAC,cAAc,CAAC,CAACO,MAAM,CAACH,SAAS,EAAEH,KAAK,CAAC;MACjD,IAAI,CAACD,GAAG,CAAC,UAAU,CAAC,CAACO,MAAM,CAACH,SAAS,EAAEH,KAAK,CAAC;MAE7CG,SAAS,CAACI,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,mBAAUC,IAAI,EAAE;MACd,IAAI,IAAI,CAACC,MAAM,EAAE;QACf,IAAI,CAACA,MAAM,CAACC,SAAS,CAACF,IAAI,CAAC;QAC3B,OAAO,IAAI;MACb;MACA,QAAQA,IAAI,CAACG,IAAI;QACf,KAAK,IAAI,CAACN,GAAG;UACX,IAAI,CAACO,KAAK,EAAE;UACZ;QACF;UACE,IAAI,CAACH,MAAM,GAAG,IAAI,CAACV,GAAG,CAACS,IAAI,CAACG,IAAI,CAAC;UACjC,IAAI,IAAI,CAACF,MAAM,EAAE;YACf,IAAI,CAACA,MAAM,CAACC,SAAS,CAACF,IAAI,CAAC;UAC7B;UACA;MAAM;MAEV,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OAED,qBAAY,CAAC;EAAC;IAAA;IAAA,OAEd,oBAAWG,IAAI,EAAE;MACf,IAAI,IAAI,CAACF,MAAM,EAAE;QACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACI,UAAU,CAACF,IAAI,CAAC,EAAE;UACjC,IAAI,CAACG,UAAU,CAAC,IAAI,CAACL,MAAM,CAACT,KAAK,CAAC;UAClC,IAAI,CAACS,MAAM,GAAGM,SAAS;QACzB;QACA,OAAO,IAAI;MACb;MACA,QAAQJ,IAAI;QACV,KAAK,IAAI,CAACN,GAAG;UACX,OAAO,KAAK;QACd;UACE;UACA,OAAO,IAAI;MAAC;IAElB;EAAC;EAAA;AAAA,EAjEoBb,SAAS;AAoEhCwB,MAAM,CAACC,OAAO,GAAGnB,QAAQ"}