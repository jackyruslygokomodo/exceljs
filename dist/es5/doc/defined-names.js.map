{"version":3,"file":"defined-names.js","names":["_","require","colCache","CellMatrix","Range","rangeRegexp","DefinedNames","matrixMap","name","matrix","locStr","location","decodeEx","addEx","getMatrix","top","col","left","right","row","bottom","address","sheetName","n2l","addCellEx","removeEx","removeCellEx","each","callback","forEach","cell","addressStr","getNamesEx","map","findCellEx","filter","Boolean","mark","range","x","y","vGrow","yy","edge","c","findCellAt","hGrow","xx","cells","push","i","length","ranges","_explore","$shortRange","forEachInSheet","start","numDelete","numInsert","spliceRows","normaliseMatrix","spliceColumns","getRanges","definedName","value","rangeStr","test","split","pop","addCell","module","exports"],"sources":["../../../lib/doc/defined-names.js"],"sourcesContent":["'use strict';\n\nconst _ = require('../utils/under-dash');\nconst colCache = require('../utils/col-cache');\nconst CellMatrix = require('../utils/cell-matrix');\nconst Range = require('./range');\n\nconst rangeRegexp = /[$](\\w+)[$](\\d+)(:[$](\\w+)[$](\\d+))?/;\n\nclass DefinedNames {\n  constructor() {\n    this.matrixMap = {};\n  }\n\n  getMatrix(name) {\n    const matrix = this.matrixMap[name] || (this.matrixMap[name] = new CellMatrix());\n    return matrix;\n  }\n\n  // add a name to a cell. locStr in the form SheetName!$col$row or SheetName!$c1$r1:$c2:$r2\n  add(locStr, name) {\n    const location = colCache.decodeEx(locStr);\n    this.addEx(location, name);\n  }\n\n  addEx(location, name) {\n    const matrix = this.getMatrix(name);\n    if (location.top) {\n      for (let col = location.left; col <= location.right; col++) {\n        for (let row = location.top; row <= location.bottom; row++) {\n          const address = {\n            sheetName: location.sheetName,\n            address: colCache.n2l(col) + row,\n            row,\n            col,\n          };\n\n          matrix.addCellEx(address);\n        }\n      }\n    } else {\n      matrix.addCellEx(location);\n    }\n  }\n\n  remove(locStr, name) {\n    const location = colCache.decodeEx(locStr);\n    this.removeEx(location, name);\n  }\n\n  removeEx(location, name) {\n    const matrix = this.getMatrix(name);\n    matrix.removeCellEx(location);\n  }\n\n  removeAllNames(location) {\n    _.each(this.matrixMap, matrix => {\n      matrix.removeCellEx(location);\n    });\n  }\n\n  forEach(callback) {\n    _.each(this.matrixMap, (matrix, name) => {\n      matrix.forEach(cell => {\n        callback(name, cell);\n      });\n    });\n  }\n\n  // get all the names of a cell\n  getNames(addressStr) {\n    return this.getNamesEx(colCache.decodeEx(addressStr));\n  }\n\n  getNamesEx(address) {\n    return _.map(this.matrixMap, (matrix, name) => matrix.findCellEx(address) && name).filter(\n      Boolean\n    );\n  }\n\n  _explore(matrix, cell) {\n    cell.mark = false;\n    const {sheetName} = cell;\n\n    const range = new Range(cell.row, cell.col, cell.row, cell.col, sheetName);\n    let x;\n    let y;\n\n    // grow vertical - only one col to worry about\n    function vGrow(yy, edge) {\n      const c = matrix.findCellAt(sheetName, yy, cell.col);\n      if (!c || !c.mark) {\n        return false;\n      }\n      range[edge] = yy;\n      c.mark = false;\n      return true;\n    }\n    for (y = cell.row - 1; vGrow(y, 'top'); y--);\n    for (y = cell.row + 1; vGrow(y, 'bottom'); y++);\n\n    // grow horizontal - ensure all rows can grow\n    function hGrow(xx, edge) {\n      const cells = [];\n      for (y = range.top; y <= range.bottom; y++) {\n        const c = matrix.findCellAt(sheetName, y, xx);\n        if (c && c.mark) {\n          cells.push(c);\n        } else {\n          return false;\n        }\n      }\n      range[edge] = xx;\n      for (let i = 0; i < cells.length; i++) {\n        cells[i].mark = false;\n      }\n      return true;\n    }\n    for (x = cell.col - 1; hGrow(x, 'left'); x--);\n    for (x = cell.col + 1; hGrow(x, 'right'); x++);\n\n    return range;\n  }\n\n  getRanges(name, matrix) {\n    matrix = matrix || this.matrixMap[name];\n\n    if (!matrix) {\n      return {name, ranges: []};\n    }\n\n    // mark and sweep!\n    matrix.forEach(cell => {\n      cell.mark = true;\n    });\n    const ranges = matrix\n      .map(cell => cell.mark && this._explore(matrix, cell))\n      .filter(Boolean)\n      .map(range => range.$shortRange);\n\n    return {\n      name,\n      ranges,\n    };\n  }\n\n  normaliseMatrix(matrix, sheetName) {\n    // some of the cells might have shifted on specified sheet\n    // need to reassign rows, cols\n    matrix.forEachInSheet(sheetName, (cell, row, col) => {\n      if (cell) {\n        if (cell.row !== row || cell.col !== col) {\n          cell.row = row;\n          cell.col = col;\n          cell.address = colCache.n2l(col) + row;\n        }\n      }\n    });\n  }\n\n  spliceRows(sheetName, start, numDelete, numInsert) {\n    _.each(this.matrixMap, matrix => {\n      matrix.spliceRows(sheetName, start, numDelete, numInsert);\n      this.normaliseMatrix(matrix, sheetName);\n    });\n  }\n\n  spliceColumns(sheetName, start, numDelete, numInsert) {\n    _.each(this.matrixMap, matrix => {\n      matrix.spliceColumns(sheetName, start, numDelete, numInsert);\n      this.normaliseMatrix(matrix, sheetName);\n    });\n  }\n\n  get model() {\n    // To get names per cell - just iterate over all names finding cells if they exist\n    return _.map(this.matrixMap, (matrix, name) => this.getRanges(name, matrix)).filter(\n      definedName => definedName.ranges.length\n    );\n  }\n\n  set model(value) {\n    // value is [ { name, ranges }, ... ]\n    const matrixMap = (this.matrixMap = {});\n    value.forEach(definedName => {\n      const matrix = (matrixMap[definedName.name] = new CellMatrix());\n      definedName.ranges.forEach(rangeStr => {\n        if (rangeRegexp.test(rangeStr.split('!').pop() || '')) {\n          matrix.addCell(rangeStr);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = DefinedNames;\n"],"mappings":"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"}