{"version":3,"file":"line-buffer.js","names":["require","EventEmitter","LineBuffer","options","encoding","buffer","corked","queue","chunk","data","lines","split","pop","forEach","line","push","emit","_flush","module","exports"],"sources":["../../../lib/csv/line-buffer.js"],"sourcesContent":["const {EventEmitter} = require('events');\n\nclass LineBuffer extends EventEmitter {\n  constructor(options) {\n    super();\n\n    this.encoding = options.encoding;\n\n    this.buffer = null;\n\n    // part of cork/uncork\n    this.corked = false;\n    this.queue = [];\n  }\n\n  // Events:\n  //  line: here is a line\n  //  done: all lines emitted\n\n  write(chunk) {\n    // find line or lines in chunk and emit them if not corked\n    // or queue them if corked\n    const data = this.buffer ? this.buffer + chunk : chunk;\n    const lines = data.split(/\\r?\\n/g);\n\n    // save the last line\n    this.buffer = lines.pop();\n\n    lines.forEach(function(line) {\n      if (this.corked) {\n        this.queue.push(line);\n      } else {\n        this.emit('line', line);\n      }\n    });\n\n    return !this.corked;\n  }\n\n  cork() {\n    this.corked = true;\n  }\n\n  uncork() {\n    this.corked = false;\n    this._flush();\n\n    // tell the source I'm ready again\n    this.emit('drain');\n  }\n\n  setDefaultEncoding() {\n    // ?\n  }\n\n  end() {\n    if (this.buffer) {\n      this.emit('line', this.buffer);\n      this.buffer = null;\n    }\n    this.emit('done');\n  }\n\n  _flush() {\n    if (!this.corked) {\n      this.queue.forEach(line => {\n        this.emit('line', line);\n      });\n      this.queue = [];\n    }\n  }\n}\n\nmodule.exports = LineBuffer;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,eAAuBA,OAAO,CAAC,QAAQ,CAAC;EAAjCC,YAAY,YAAZA,YAAY;AAAsB,IAEnCC,UAAU;EAAA;EAAA;EACd,oBAAYC,OAAO,EAAE;IAAA;IAAA;IACnB;IAEA,MAAKC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;IAEhC,MAAKC,MAAM,GAAG,IAAI;;IAElB;IACA,MAAKC,MAAM,GAAG,KAAK;IACnB,MAAKC,KAAK,GAAG,EAAE;IAAC;EAClB;;EAEA;EACA;EACA;EAAA;IAAA;IAAA,OAEA,eAAMC,KAAK,EAAE;MACX;MACA;MACA,IAAMC,IAAI,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACA,MAAM,GAAGG,KAAK,GAAGA,KAAK;MACtD,IAAME,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,QAAQ,CAAC;;MAElC;MACA,IAAI,CAACN,MAAM,GAAGK,KAAK,CAACE,GAAG,EAAE;MAEzBF,KAAK,CAACG,OAAO,CAAC,UAASC,IAAI,EAAE;QAC3B,IAAI,IAAI,CAACR,MAAM,EAAE;UACf,IAAI,CAACC,KAAK,CAACQ,IAAI,CAACD,IAAI,CAAC;QACvB,CAAC,MAAM;UACL,IAAI,CAACE,IAAI,CAAC,MAAM,EAAEF,IAAI,CAAC;QACzB;MACF,CAAC,CAAC;MAEF,OAAO,CAAC,IAAI,CAACR,MAAM;IACrB;EAAC;IAAA;IAAA,OAED,gBAAO;MACL,IAAI,CAACA,MAAM,GAAG,IAAI;IACpB;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,IAAI,CAACA,MAAM,GAAG,KAAK;MACnB,IAAI,CAACW,MAAM,EAAE;;MAEb;MACA,IAAI,CAACD,IAAI,CAAC,OAAO,CAAC;IACpB;EAAC;IAAA;IAAA,OAED,8BAAqB;MACnB;IAAA;EACD;IAAA;IAAA,OAED,eAAM;MACJ,IAAI,IAAI,CAACX,MAAM,EAAE;QACf,IAAI,CAACW,IAAI,CAAC,MAAM,EAAE,IAAI,CAACX,MAAM,CAAC;QAC9B,IAAI,CAACA,MAAM,GAAG,IAAI;MACpB;MACA,IAAI,CAACW,IAAI,CAAC,MAAM,CAAC;IACnB;EAAC;IAAA;IAAA,OAED,kBAAS;MAAA;MACP,IAAI,CAAC,IAAI,CAACV,MAAM,EAAE;QAChB,IAAI,CAACC,KAAK,CAACM,OAAO,CAAC,UAAAC,IAAI,EAAI;UACzB,MAAI,CAACE,IAAI,CAAC,MAAM,EAAEF,IAAI,CAAC;QACzB,CAAC,CAAC;QACF,IAAI,CAACP,KAAK,GAAG,EAAE;MACjB;IACF;EAAC;EAAA;AAAA,EApEsBN,YAAY;AAuErCiB,MAAM,CAACC,OAAO,GAAGjB,UAAU"}