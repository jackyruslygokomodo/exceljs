{"version":3,"file":"sheet-protection-xform.js","names":["_","require","BaseXform","booleanToXml","model","value","undefined","xmlToBoolean","equals","SheetProtectionXform","xmlStream","attributes","sheet","selectLockedCells","selectUnlockedCells","formatCells","formatColumns","formatRows","insertColumns","insertRows","insertHyperlinks","deleteColumns","deleteRows","sort","autoFilter","pivotTables","algorithmName","hashValue","saltValue","spinCount","objects","scenarios","some","leafNode","tag","node","name","parseInt","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/sheet-protection-xform.js"],"sourcesContent":["const _ = require('../../../utils/under-dash');\nconst BaseXform = require('../base-xform');\n\nfunction booleanToXml(model, value) {\n  return model ? value : undefined;\n}\n\nfunction xmlToBoolean(value, equals) {\n  return value === equals ? true : undefined;\n}\n\nclass SheetProtectionXform extends BaseXform {\n  get tag() {\n    return 'sheetProtection';\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      const attributes = {\n        sheet: booleanToXml(model.sheet, '1'),\n        selectLockedCells: model.selectLockedCells === false ? '1' : undefined,\n        selectUnlockedCells: model.selectUnlockedCells === false ? '1' : undefined,\n        formatCells: booleanToXml(model.formatCells, '0'),\n        formatColumns: booleanToXml(model.formatColumns, '0'),\n        formatRows: booleanToXml(model.formatRows, '0'),\n        insertColumns: booleanToXml(model.insertColumns, '0'),\n        insertRows: booleanToXml(model.insertRows, '0'),\n        insertHyperlinks: booleanToXml(model.insertHyperlinks, '0'),\n        deleteColumns: booleanToXml(model.deleteColumns, '0'),\n        deleteRows: booleanToXml(model.deleteRows, '0'),\n        sort: booleanToXml(model.sort, '0'),\n        autoFilter: booleanToXml(model.autoFilter, '0'),\n        pivotTables: booleanToXml(model.pivotTables, '0'),\n      };\n      if (model.sheet) {\n        attributes.algorithmName = model.algorithmName;\n        attributes.hashValue = model.hashValue;\n        attributes.saltValue = model.saltValue;\n        attributes.spinCount = model.spinCount;\n        attributes.objects = booleanToXml(model.objects === false, '1');\n        attributes.scenarios = booleanToXml(model.scenarios === false, '1');\n      }\n      if (_.some(attributes, value => value !== undefined)) {\n        xmlStream.leafNode(this.tag, attributes);\n      }\n    }\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          sheet: xmlToBoolean(node.attributes.sheet, '1'),\n          objects: node.attributes.objects === '1' ? false : undefined,\n          scenarios: node.attributes.scenarios === '1' ? false : undefined,\n          selectLockedCells: node.attributes.selectLockedCells === '1' ? false : undefined,\n          selectUnlockedCells: node.attributes.selectUnlockedCells === '1' ? false : undefined,\n          formatCells: xmlToBoolean(node.attributes.formatCells, '0'),\n          formatColumns: xmlToBoolean(node.attributes.formatColumns, '0'),\n          formatRows: xmlToBoolean(node.attributes.formatRows, '0'),\n          insertColumns: xmlToBoolean(node.attributes.insertColumns, '0'),\n          insertRows: xmlToBoolean(node.attributes.insertRows, '0'),\n          insertHyperlinks: xmlToBoolean(node.attributes.insertHyperlinks, '0'),\n          deleteColumns: xmlToBoolean(node.attributes.deleteColumns, '0'),\n          deleteRows: xmlToBoolean(node.attributes.deleteRows, '0'),\n          sort: xmlToBoolean(node.attributes.sort, '0'),\n          autoFilter: xmlToBoolean(node.attributes.autoFilter, '0'),\n          pivotTables: xmlToBoolean(node.attributes.pivotTables, '0'),\n        };\n        if (node.attributes.algorithmName) {\n          this.model.algorithmName = node.attributes.algorithmName;\n          this.model.hashValue = node.attributes.hashValue;\n          this.model.saltValue = node.attributes.saltValue;\n          this.model.spinCount = parseInt(node.attributes.spinCount, 10);\n        }\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nmodule.exports = SheetProtectionXform;\n"],"mappings":"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"}