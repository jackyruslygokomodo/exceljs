{"version":3,"file":"cell-xform.js","names":["utils","require","BaseXform","Range","Enums","RichTextXform","getValueType","v","undefined","ValueType","Null","String","Number","Boolean","Date","text","hyperlink","Hyperlink","formula","Formula","error","Error","getEffectiveCellType","cell","type","result","CellXform","richTextXForm","model","options","styleId","styles","addStyleModel","style","comment","comments","push","ref","address","RichText","sharedStrings","ssId","add","value","date1904","hyperlinks","target","tooltip","Merge","merges","shareType","si","siFormulae","formulae","sharedFormula","master","range","expandToAddress","xmlStream","attrs","t","leafNode","addAttribute","dateToExcel","openNode","richText","forEach","render","closeNode","renderFormula","node","parser","parseOpen","name","attributes","r","s","parseInt","currentNode","parseText","xmlDecode","parseFloat","parseClose","getStyleModel","getString","isDateFmt","numFmt","excelToDate","hyperlinkMap","commentsMap","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/cell-xform.js"],"sourcesContent":["const utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\nconst Range = require('../../../doc/range');\nconst Enums = require('../../../doc/enums');\n\nconst RichTextXform = require('../strings/rich-text-xform');\n\nfunction getValueType(v) {\n  if (v === null || v === undefined) {\n    return Enums.ValueType.Null;\n  }\n  if (v instanceof String || typeof v === 'string') {\n    return Enums.ValueType.String;\n  }\n  if (typeof v === 'number') {\n    return Enums.ValueType.Number;\n  }\n  if (typeof v === 'boolean') {\n    return Enums.ValueType.Boolean;\n  }\n  if (v instanceof Date) {\n    return Enums.ValueType.Date;\n  }\n  if (v.text && v.hyperlink) {\n    return Enums.ValueType.Hyperlink;\n  }\n  if (v.formula) {\n    return Enums.ValueType.Formula;\n  }\n  if (v.error) {\n    return Enums.ValueType.Error;\n  }\n  throw new Error('I could not understand type of value');\n}\n\nfunction getEffectiveCellType(cell) {\n  switch (cell.type) {\n    case Enums.ValueType.Formula:\n      return getValueType(cell.result);\n    default:\n      return cell.type;\n  }\n}\n\nclass CellXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.richTextXForm = new RichTextXform();\n  }\n\n  get tag() {\n    return 'c';\n  }\n\n  prepare(model, options) {\n    const styleId = options.styles.addStyleModel(model.style || {}, getEffectiveCellType(model));\n    if (styleId) {\n      model.styleId = styleId;\n    }\n\n    if (model.comment) {\n      options.comments.push({...model.comment, ref: model.address});\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n      case Enums.ValueType.RichText:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.value);\n        }\n        break;\n\n      case Enums.ValueType.Date:\n        if (options.date1904) {\n          model.date1904 = true;\n        }\n        break;\n\n      case Enums.ValueType.Hyperlink:\n        if (options.sharedStrings && model.text !== undefined && model.text !== null) {\n          model.ssId = options.sharedStrings.add(model.text);\n        }\n        options.hyperlinks.push({\n          address: model.address,\n          target: model.hyperlink,\n          tooltip: model.tooltip,\n        });\n        break;\n\n      case Enums.ValueType.Merge:\n        options.merges.add(model);\n        break;\n\n      case Enums.ValueType.Formula:\n        if (options.date1904) {\n          // in case valueType is date\n          model.date1904 = true;\n        }\n\n        if (model.shareType === 'shared') {\n          model.si = options.siFormulae++;\n        }\n\n        if (model.formula) {\n          options.formulae[model.address] = model;\n        } else if (model.sharedFormula) {\n          const master = options.formulae[model.sharedFormula];\n          if (!master) {\n            throw new Error(\n              `Shared Formula master must exist above and or left of clone for cell ${model.address}`\n            );\n          }\n          if (master.si === undefined) {\n            master.shareType = 'shared';\n            master.si = options.siFormulae++;\n            master.range = new Range(master.address, model.address);\n          } else if (master.range) {\n            master.range.expandToAddress(model.address);\n          }\n          model.si = master.si;\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  renderFormula(xmlStream, model) {\n    let attrs = null;\n    switch (model.shareType) {\n      case 'shared':\n        attrs = {\n          t: 'shared',\n          ref: model.ref || model.range.range,\n          si: model.si,\n        };\n        break;\n\n      case 'array':\n        attrs = {\n          t: 'array',\n          ref: model.ref,\n        };\n        break;\n\n      default:\n        if (model.si !== undefined) {\n          attrs = {\n            t: 'shared',\n            si: model.si,\n          };\n        }\n        break;\n    }\n\n    switch (getValueType(model.result)) {\n      case Enums.ValueType.Null: // ?\n        xmlStream.leafNode('f', attrs, model.formula);\n        break;\n\n      case Enums.ValueType.String:\n        // oddly, formula results don't ever use shared strings\n        xmlStream.addAttribute('t', 'str');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result ? 1 : 0);\n        break;\n\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result.error);\n        break;\n\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.result, model.date1904));\n        break;\n\n      // case Enums.ValueType.Hyperlink: // ??\n      // case Enums.ValueType.Formula:\n      default:\n        throw new Error('I could not understand type of value');\n    }\n  }\n\n  render(xmlStream, model) {\n    if (model.type === Enums.ValueType.Null && !model.styleId) {\n      // if null and no style, exit\n      return;\n    }\n\n    xmlStream.openNode('c');\n    xmlStream.addAttribute('r', model.address);\n\n    if (model.styleId) {\n      xmlStream.addAttribute('s', model.styleId);\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.Null:\n        break;\n\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('v', null, model.value);\n        break;\n\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('v', null, model.value ? '1' : '0');\n        break;\n\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('v', null, model.value.error);\n        break;\n\n      case Enums.ValueType.String:\n      case Enums.ValueType.RichText:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else if (model.value && model.value.richText) {\n          xmlStream.addAttribute('t', 'inlineStr');\n          xmlStream.openNode('is');\n          model.value.richText.forEach(text => {\n            this.richTextXForm.render(xmlStream, text);\n          });\n          xmlStream.closeNode('is');\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.value);\n        }\n        break;\n\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.value, model.date1904));\n        break;\n\n      case Enums.ValueType.Hyperlink:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.text);\n        }\n        break;\n\n      case Enums.ValueType.Formula:\n        this.renderFormula(xmlStream, model);\n        break;\n\n      case Enums.ValueType.Merge:\n        // nothing to add\n        break;\n\n      default:\n        break;\n    }\n\n    xmlStream.closeNode(); // </c>\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'c':\n        // const address = colCache.decodeAddress(node.attributes.r);\n        this.model = {\n          address: node.attributes.r,\n        };\n        this.t = node.attributes.t;\n        if (node.attributes.s) {\n          this.model.styleId = parseInt(node.attributes.s, 10);\n        }\n        return true;\n\n      case 'f':\n        this.currentNode = 'f';\n        this.model.si = node.attributes.si;\n        this.model.shareType = node.attributes.t;\n        this.model.ref = node.attributes.ref;\n        return true;\n\n      case 'v':\n        this.currentNode = 'v';\n        return true;\n\n      case 't':\n        this.currentNode = 't';\n        return true;\n\n      case 'r':\n        this.parser = this.richTextXForm;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n      return;\n    }\n    switch (this.currentNode) {\n      case 'f':\n        this.model.formula = this.model.formula ? this.model.formula + text : text;\n        break;\n      case 'v':\n      case 't':\n        if (this.model.value && this.model.value.richText) {\n          this.model.value.richText.text = this.model.value.richText.text\n            ? this.model.value.richText.text + text\n            : text;\n        } else {\n          this.model.value = this.model.value ? this.model.value + text : text;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  parseClose(name) {\n    switch (name) {\n      case 'c': {\n        const {model} = this;\n\n        // first guess on cell type\n        if (model.formula || model.shareType) {\n          model.type = Enums.ValueType.Formula;\n          if (model.value) {\n            if (this.t === 'str') {\n              model.result = utils.xmlDecode(model.value);\n            } else if (this.t === 'b') {\n              model.result = parseInt(model.value, 10) !== 0;\n            } else if (this.t === 'e') {\n              model.result = {error: model.value};\n            } else {\n              model.result = parseFloat(model.value);\n            }\n            model.value = undefined;\n          }\n        } else if (model.value !== undefined) {\n          switch (this.t) {\n            case 's':\n              model.type = Enums.ValueType.String;\n              model.value = parseInt(model.value, 10);\n              break;\n            case 'str':\n              model.type = Enums.ValueType.String;\n              model.value = utils.xmlDecode(model.value);\n              break;\n            case 'inlineStr':\n              model.type = Enums.ValueType.String;\n              break;\n            case 'b':\n              model.type = Enums.ValueType.Boolean;\n              model.value = parseInt(model.value, 10) !== 0;\n              break;\n            case 'e':\n              model.type = Enums.ValueType.Error;\n              model.value = {error: model.value};\n              break;\n            default:\n              model.type = Enums.ValueType.Number;\n              model.value = parseFloat(model.value);\n              break;\n          }\n        } else if (model.styleId) {\n          model.type = Enums.ValueType.Null;\n        } else {\n          model.type = Enums.ValueType.Merge;\n        }\n        return false;\n      }\n\n      case 'f':\n      case 'v':\n      case 'is':\n        this.currentNode = undefined;\n        return true;\n\n      case 't':\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        this.currentNode = undefined;\n        return true;\n\n      case 'r':\n        this.model.value = this.model.value || {};\n        this.model.value.richText = this.model.value.richText || [];\n        this.model.value.richText.push(this.parser.model);\n        this.parser = undefined;\n        this.currentNode = undefined;\n        return true;\n\n      default:\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  reconcile(model, options) {\n    const style = model.styleId && options.styles && options.styles.getStyleModel(model.styleId);\n    if (style) {\n      model.style = style;\n    }\n    if (model.styleId !== undefined) {\n      model.styleId = undefined;\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (typeof model.value === 'number') {\n          if (options.sharedStrings) {\n            model.value = options.sharedStrings.getString(model.value);\n          }\n        }\n        if (model.value.richText) {\n          model.type = Enums.ValueType.RichText;\n        }\n        break;\n\n      case Enums.ValueType.Number:\n        if (style && utils.isDateFmt(style.numFmt)) {\n          model.type = Enums.ValueType.Date;\n          model.value = utils.excelToDate(model.value, options.date1904);\n        }\n        break;\n\n      case Enums.ValueType.Formula:\n        if (model.result !== undefined && style && utils.isDateFmt(style.numFmt)) {\n          model.result = utils.excelToDate(model.result, options.date1904);\n        }\n        if (model.shareType === 'shared') {\n          if (model.ref) {\n            // master\n            options.formulae[model.si] = model.address;\n          } else {\n            // slave\n            model.sharedFormula = options.formulae[model.si];\n            delete model.shareType;\n          }\n          delete model.si;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    // look for hyperlink\n    const hyperlink = options.hyperlinkMap[model.address];\n    if (hyperlink) {\n      if (model.type === Enums.ValueType.Formula) {\n        model.text = model.result;\n        model.result = undefined;\n      } else {\n        model.text = model.value;\n        model.value = undefined;\n      }\n      model.type = Enums.ValueType.Hyperlink;\n      model.hyperlink = hyperlink;\n    }\n\n    const comment = options.commentsMap && options.commentsMap[model.address];\n    if (comment) {\n      model.comment = comment;\n    }\n  }\n}\n\nmodule.exports = CellXform;\n"],"mappings":"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"}