{"version":3,"file":"numfmt-xform.js","names":["_","require","defaultNumFormats","BaseXform","hashDefaultFormats","hash","each","dnf","id","f","parseInt","defaultFmtHash","NumFmtXform","formatCode","xmlStream","model","leafNode","numFmtId","node","name","attributes","replace","getDefaultFmtId","getDefaultFmtCode","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/numfmt-xform.js"],"sourcesContent":["const _ = require('../../../utils/under-dash');\nconst defaultNumFormats = require('../../defaultnumformats');\n\nconst BaseXform = require('../base-xform');\n\nfunction hashDefaultFormats() {\n  const hash = {};\n  _.each(defaultNumFormats, (dnf, id) => {\n    if (dnf.f) {\n      hash[dnf.f] = parseInt(id, 10);\n    }\n    // at some point, add the other cultures here...\n  });\n  return hash;\n}\nconst defaultFmtHash = hashDefaultFormats();\n\n// NumFmt encapsulates translation between number format and xlsx\nclass NumFmtXform extends BaseXform {\n  constructor(id, formatCode) {\n    super();\n\n    this.id = id;\n    this.formatCode = formatCode;\n  }\n\n  get tag() {\n    return 'numFmt';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.leafNode('numFmt', {numFmtId: model.id, formatCode: model.formatCode});\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case 'numFmt':\n        this.model = {\n          id: parseInt(node.attributes.numFmtId, 10),\n          formatCode: node.attributes.formatCode.replace(/[\\\\](.)/g, '$1'),\n        };\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nNumFmtXform.getDefaultFmtId = function getDefaultFmtId(formatCode) {\n  return defaultFmtHash[formatCode];\n};\n\nNumFmtXform.getDefaultFmtCode = function getDefaultFmtCode(numFmtId) {\n  return defaultNumFormats[numFmtId] && defaultNumFormats[numFmtId].f;\n};\n\nmodule.exports = NumFmtXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAC9C,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAE5D,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAe,CAAC;AAE1C,SAASG,kBAAkB,GAAG;EAC5B,IAAMC,IAAI,GAAG,CAAC,CAAC;EACfL,CAAC,CAACM,IAAI,CAACJ,iBAAiB,EAAE,UAACK,GAAG,EAAEC,EAAE,EAAK;IACrC,IAAID,GAAG,CAACE,CAAC,EAAE;MACTJ,IAAI,CAACE,GAAG,CAACE,CAAC,CAAC,GAAGC,QAAQ,CAACF,EAAE,EAAE,EAAE,CAAC;IAChC;IACA;EACF,CAAC,CAAC;;EACF,OAAOH,IAAI;AACb;AACA,IAAMM,cAAc,GAAGP,kBAAkB,EAAE;;AAE3C;AAAA,IACMQ,WAAW;EAAA;EAAA;EACf,qBAAYJ,EAAE,EAAEK,UAAU,EAAE;IAAA;IAAA;IAC1B;IAEA,MAAKL,EAAE,GAAGA,EAAE;IACZ,MAAKK,UAAU,GAAGA,UAAU;IAAC;EAC/B;EAAC;IAAA;IAAA,KAED,eAAU;MACR,OAAO,QAAQ;IACjB;EAAC;IAAA;IAAA,OAED,gBAAOC,SAAS,EAAEC,KAAK,EAAE;MACvBD,SAAS,CAACE,QAAQ,CAAC,QAAQ,EAAE;QAACC,QAAQ,EAAEF,KAAK,CAACP,EAAE;QAAEK,UAAU,EAAEE,KAAK,CAACF;MAAU,CAAC,CAAC;IAClF;EAAC;IAAA;IAAA,OAED,mBAAUK,IAAI,EAAE;MACd,QAAQA,IAAI,CAACC,IAAI;QACf,KAAK,QAAQ;UACX,IAAI,CAACJ,KAAK,GAAG;YACXP,EAAE,EAAEE,QAAQ,CAACQ,IAAI,CAACE,UAAU,CAACH,QAAQ,EAAE,EAAE,CAAC;YAC1CJ,UAAU,EAAEK,IAAI,CAACE,UAAU,CAACP,UAAU,CAACQ,OAAO,CAAC,UAAU,EAAE,IAAI;UACjE,CAAC;UACD,OAAO,IAAI;QACb;UACE,OAAO,KAAK;MAAC;IAEnB;EAAC;IAAA;IAAA,OAED,qBAAY,CAAC;EAAC;IAAA;IAAA,OAEd,sBAAa;MACX,OAAO,KAAK;IACd;EAAC;EAAA;AAAA,EAjCuBlB,SAAS;AAoCnCS,WAAW,CAACU,eAAe,GAAG,SAASA,eAAe,CAACT,UAAU,EAAE;EACjE,OAAOF,cAAc,CAACE,UAAU,CAAC;AACnC,CAAC;AAEDD,WAAW,CAACW,iBAAiB,GAAG,SAASA,iBAAiB,CAACN,QAAQ,EAAE;EACnE,OAAOf,iBAAiB,CAACe,QAAQ,CAAC,IAAIf,iBAAiB,CAACe,QAAQ,CAAC,CAACR,CAAC;AACrE,CAAC;AAEDe,MAAM,CAACC,OAAO,GAAGb,WAAW"}