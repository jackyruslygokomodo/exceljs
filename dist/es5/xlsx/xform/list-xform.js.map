{"version":3,"file":"list-xform.js","names":["BaseXform","require","ListXform","options","tag","always","count","empty","$count","$","childXform","maxItems","model","forEach","childModel","index","prepare","xmlStream","length","openNode","addAttribute","render","closeNode","leafNode","node","parser","parseOpen","name","text","parseText","parseClose","push","undefined","Error","reconcile","module","exports"],"sources":["../../../../lib/xlsx/xform/list-xform.js"],"sourcesContent":["const BaseXform = require('./base-xform');\n\nclass ListXform extends BaseXform {\n  constructor(options) {\n    super();\n\n    this.tag = options.tag;\n    this.always = !!options.always;\n    this.count = options.count;\n    this.empty = options.empty;\n    this.$count = options.$count || 'count';\n    this.$ = options.$;\n    this.childXform = options.childXform;\n    this.maxItems = options.maxItems;\n  }\n\n  prepare(model, options) {\n    const {childXform} = this;\n    if (model) {\n      model.forEach((childModel, index) => {\n        options.index = index;\n        childXform.prepare(childModel, options);\n      });\n    }\n  }\n\n  render(xmlStream, model) {\n    if (this.always || (model && model.length)) {\n      xmlStream.openNode(this.tag, this.$);\n      if (this.count) {\n        xmlStream.addAttribute(this.$count, (model && model.length) || 0);\n      }\n\n      const {childXform} = this;\n      (model || []).forEach((childModel, index) => {\n        childXform.render(xmlStream, childModel, index);\n      });\n\n      xmlStream.closeNode();\n    } else if (this.empty) {\n      xmlStream.leafNode(this.tag);\n    }\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.model = [];\n        return true;\n      default:\n        if (this.childXform.parseOpen(node)) {\n          this.parser = this.childXform;\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.push(this.parser.model);\n        this.parser = undefined;\n\n        if (this.maxItems && this.model.length > this.maxItems) {\n          throw new Error(`Max ${this.childXform.tag} count (${this.maxItems}) exceeded`);\n        }\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  reconcile(model, options) {\n    if (model) {\n      const {childXform} = this;\n      model.forEach(childModel => {\n        childXform.reconcile(childModel, options);\n      });\n    }\n  }\n}\n\nmodule.exports = ListXform;\n"],"mappings":"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"}