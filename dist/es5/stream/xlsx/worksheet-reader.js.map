{"version":3,"file":"worksheet-reader.js","names":["require","EventEmitter","parseSax","_","utils","colCache","Dimensions","Row","Column","WorksheetReader","workbook","id","iterator","options","name","_columns","_keys","_dimensions","Error","c","col","l2n","length","n","push","key","value","f","each","parse","events","eventType","emit","emitSheet","emitHyperlinks","hyperlinks","worksheets","sharedStrings","styles","properties","inCols","inRows","inHyperlinks","cols","row","current","worksheetEvents","node","min","parseInt","attributes","max","width","parseFloat","styleId","style","r","ht","height","s","getStyleModel","ref","t","text","v","hyperlink","rId","fromModel","expandRow","address","decodeAddress","cell","getCell","cellValue","formula","result","xmlDecode","index","sharedString","error","isDateFmt","numFmt","excelToDate","model","date1904","undefined","Symbol","asyncIterator","module","exports"],"sources":["../../../../lib/stream/xlsx/worksheet-reader.js"],"sourcesContent":["const {EventEmitter} = require('events');\nconst parseSax = require('../../utils/parse-sax');\n\nconst _ = require('../../utils/under-dash');\nconst utils = require('../../utils/utils');\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nclass WorksheetReader extends EventEmitter {\n  constructor({workbook, id, iterator, options}) {\n    super();\n\n    this.workbook = workbook;\n    this.id = id;\n    this.iterator = iterator;\n    this.options = options || {};\n\n    // and a name\n    this.name = `Sheet${this.id}`;\n\n    // column definitions\n    this._columns = null;\n    this._keys = {};\n\n    // keep a record of dimensions\n    this._dimensions = new Dimensions();\n  }\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  }\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) {\n        return col;\n      }\n\n      // otherise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  async read() {\n    try {\n      for await (const events of this.parse()) {\n        for (const {eventType, value} of events) {\n          this.emit(eventType, value);\n        }\n      }\n      this.emit('finished');\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const events of this.parse()) {\n      for (const {eventType, value} of events) {\n        if (eventType === 'row') {\n          yield value;\n        }\n      }\n    }\n  }\n\n  async *parse() {\n    const {iterator, options} = this;\n    let emitSheet = false;\n    let emitHyperlinks = false;\n    let hyperlinks = null;\n    switch (options.worksheets) {\n      case 'emit':\n        emitSheet = true;\n        break;\n      case 'prep':\n        break;\n      default:\n        break;\n    }\n    switch (options.hyperlinks) {\n      case 'emit':\n        emitHyperlinks = true;\n        break;\n      case 'cache':\n        this.hyperlinks = hyperlinks = {};\n        break;\n      default:\n        break;\n    }\n    if (!emitSheet && !emitHyperlinks && !hyperlinks) {\n      return;\n    }\n\n    // references\n    const {sharedStrings, styles, properties} = this.workbook;\n\n    // xml position\n    let inCols = false;\n    let inRows = false;\n    let inHyperlinks = false;\n\n    // parse state\n    let cols = null;\n    let row = null;\n    let c = null;\n    let current = null;\n    for await (const events of parseSax(iterator)) {\n      const worksheetEvents = [];\n      for (const {eventType, value} of events) {\n        if (eventType === 'opentag') {\n          const node = value;\n          if (emitSheet) {\n            switch (node.name) {\n              case 'cols':\n                inCols = true;\n                cols = [];\n                break;\n              case 'sheetData':\n                inRows = true;\n                break;\n\n              case 'col':\n                if (inCols) {\n                  cols.push({\n                    min: parseInt(node.attributes.min, 10),\n                    max: parseInt(node.attributes.max, 10),\n                    width: parseFloat(node.attributes.width),\n                    styleId: parseInt(node.attributes.style || '0', 10),\n                  });\n                }\n                break;\n\n              case 'row':\n                if (inRows) {\n                  const r = parseInt(node.attributes.r, 10);\n                  row = new Row(this, r);\n                  if (node.attributes.ht) {\n                    row.height = parseFloat(node.attributes.ht);\n                  }\n                  if (node.attributes.s) {\n                    const styleId = parseInt(node.attributes.s, 10);\n                    const style = styles.getStyleModel(styleId);\n                    if (style) {\n                      row.style = style;\n                    }\n                  }\n                }\n                break;\n              case 'c':\n                if (row) {\n                  c = {\n                    ref: node.attributes.r,\n                    s: parseInt(node.attributes.s, 10),\n                    t: node.attributes.t,\n                  };\n                }\n                break;\n              case 'f':\n                if (c) {\n                  current = c.f = {text: ''};\n                }\n                break;\n              case 'v':\n                if (c) {\n                  current = c.v = {text: ''};\n                }\n                break;\n              case 'is':\n              case 't':\n                if (c) {\n                  current = c.v = {text: ''};\n                }\n                break;\n              case 'mergeCell':\n                break;\n              default:\n                break;\n            }\n          }\n\n          // =================================================================\n          //\n          if (emitHyperlinks || hyperlinks) {\n            switch (node.name) {\n              case 'hyperlinks':\n                inHyperlinks = true;\n                break;\n              case 'hyperlink':\n                if (inHyperlinks) {\n                  const hyperlink = {\n                    ref: node.attributes.ref,\n                    rId: node.attributes['r:id'],\n                  };\n                  if (emitHyperlinks) {\n                    worksheetEvents.push({eventType: 'hyperlink', value: hyperlink});\n                  } else {\n                    hyperlinks[hyperlink.ref] = hyperlink;\n                  }\n                }\n                break;\n              default:\n                break;\n            }\n          }\n        } else if (eventType === 'text') {\n          // only text data is for sheet values\n          if (emitSheet) {\n            if (current) {\n              current.text += value;\n            }\n          }\n        } else if (eventType === 'closetag') {\n          const node = value;\n          if (emitSheet) {\n            switch (node.name) {\n              case 'cols':\n                inCols = false;\n                this._columns = Column.fromModel(cols);\n                break;\n              case 'sheetData':\n                inRows = false;\n                break;\n\n              case 'row':\n                this._dimensions.expandRow(row);\n                worksheetEvents.push({eventType: 'row', value: row});\n                row = null;\n                break;\n\n              case 'c':\n                if (row && c) {\n                  const address = colCache.decodeAddress(c.ref);\n                  const cell = row.getCell(address.col);\n                  if (c.s) {\n                    const style = styles.getStyleModel(c.s);\n                    if (style) {\n                      cell.style = style;\n                    }\n                  }\n\n                  if (c.f) {\n                    const cellValue = {\n                      formula: c.f.text,\n                    };\n                    if (c.v) {\n                      if (c.t === 'str') {\n                        cellValue.result = utils.xmlDecode(c.v.text);\n                      } else {\n                        cellValue.result = parseFloat(c.v.text);\n                      }\n                    }\n                    cell.value = cellValue;\n                  } else if (c.v) {\n                    switch (c.t) {\n                      case 's': {\n                        const index = parseInt(c.v.text, 10);\n                        if (sharedStrings) {\n                          cell.value = sharedStrings[index];\n                        } else {\n                          cell.value = {\n                            sharedString: index,\n                          };\n                        }\n                        break;\n                      }\n\n                      case 'inlineStr':\n                      case 'str':\n                        cell.value = utils.xmlDecode(c.v.text);\n                        break;\n\n                      case 'e':\n                        cell.value = {error: c.v.text};\n                        break;\n\n                      case 'b':\n                        cell.value = parseInt(c.v.text, 10) !== 0;\n                        break;\n\n                      default:\n                        if (utils.isDateFmt(cell.numFmt)) {\n                          cell.value = utils.excelToDate(\n                            parseFloat(c.v.text),\n                            properties.model && properties.model.date1904\n                          );\n                        } else {\n                          cell.value = parseFloat(c.v.text);\n                        }\n                        break;\n                    }\n                  }\n                  if (hyperlinks) {\n                    const hyperlink = hyperlinks[c.ref];\n                    if (hyperlink) {\n                      cell.text = cell.value;\n                      cell.value = undefined;\n                      cell.hyperlink = hyperlink;\n                    }\n                  }\n                  c = null;\n                }\n                break;\n              default:\n                break;\n            }\n          }\n          if (emitHyperlinks || hyperlinks) {\n            switch (node.name) {\n              case 'hyperlinks':\n                inHyperlinks = false;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n      if (worksheetEvents.length > 0) {\n        yield worksheetEvents;\n      }\n    }\n  }\n}\n\nmodule.exports = WorksheetReader;\n"],"mappings":"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"}