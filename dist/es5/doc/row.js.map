{"version":3,"file":"row.js","names":["_","require","Enums","colCache","Cell","Row","worksheet","number","_worksheet","_number","_cells","style","outlineLevel","_commitRow","colNumber","address","cell","col","column","getColumn","getColumnKey","l2n","getCellEx","encodeAddress","row","start","count","nKeep","inserts","nExpand","length","nEnd","i","cSrc","cDst","getCell","value","_comment","undefined","options","iteratee","includeEmpty","n","forEach","index","type","ValueType","Null","lft","rght","ws","left","Math","max","right","pb","id","man","min","rowBreaks","push","values","Array","offset","hasOwnProperty","item","eachColumnKey","key","some","eachCell","name","numFmt","_applyStyle","font","alignment","protection","border","fill","_hidden","_outlineLevel","properties","outlineLevelRow","cells","cellModel","model","height","hidden","collapsed","Error","previousAddress","Types","Merge","decodeAddress","$col$row","n2l","JSON","parse","stringify","module","exports"],"sources":["../../../lib/doc/row.js"],"sourcesContent":["'use strict';\n\nconst _ = require('../utils/under-dash');\n\nconst Enums = require('./enums');\nconst colCache = require('../utils/col-cache');\nconst Cell = require('./cell');\n\nclass Row {\n  constructor(worksheet, number) {\n    this._worksheet = worksheet;\n    this._number = number;\n    this._cells = [];\n    this.style = {};\n    this.outlineLevel = 0;\n  }\n\n  // return the row number\n  get number() {\n    return this._number;\n  }\n\n  get worksheet() {\n    return this._worksheet;\n  }\n\n  // Inform Streaming Writer that this row (and all rows before it) are complete\n  // and ready to write. Has no effect on Worksheet document\n  commit() {\n    this._worksheet._commitRow(this); // eslint-disable-line no-underscore-dangle\n  }\n\n  // helps GC by breaking cyclic references\n  destroy() {\n    delete this._worksheet;\n    delete this._cells;\n    delete this.style;\n  }\n\n  findCell(colNumber) {\n    return this._cells[colNumber - 1];\n  }\n\n  // given {address, row, col}, find or create new cell\n  getCellEx(address) {\n    let cell = this._cells[address.col - 1];\n    if (!cell) {\n      const column = this._worksheet.getColumn(address.col);\n      cell = new Cell(this, column, address.address);\n      this._cells[address.col - 1] = cell;\n    }\n    return cell;\n  }\n\n  // get cell by key, letter or column number\n  getCell(col) {\n    if (typeof col === 'string') {\n      // is it a key?\n      const column = this._worksheet.getColumnKey(col);\n      if (column) {\n        col = column.number;\n      } else {\n        col = colCache.l2n(col);\n      }\n    }\n    return (\n      this._cells[col - 1] ||\n      this.getCellEx({\n        address: colCache.encodeAddress(this._number, col),\n        row: this._number,\n        col,\n      })\n    );\n  }\n\n  // remove cell(s) and shift all higher cells down by count\n  splice(start, count, ...inserts) {\n    const nKeep = start + count;\n    const nExpand = inserts.length - count;\n    const nEnd = this._cells.length;\n    let i;\n    let cSrc;\n    let cDst;\n\n    if (nExpand < 0) {\n      // remove cells\n      for (i = start + inserts.length; i <= nEnd; i++) {\n        cDst = this._cells[i - 1];\n        cSrc = this._cells[i - nExpand - 1];\n        if (cSrc) {\n          cDst = this.getCell(i);\n          cDst.value = cSrc.value;\n          cDst.style = cSrc.style;\n          // eslint-disable-next-line no-underscore-dangle\n          cDst._comment = cSrc._comment;\n        } else if (cDst) {\n          cDst.value = null;\n          cDst.style = {};\n          // eslint-disable-next-line no-underscore-dangle\n          cDst._comment = undefined;\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        cSrc = this._cells[i - 1];\n        if (cSrc) {\n          cDst = this.getCell(i + nExpand);\n          cDst.value = cSrc.value;\n          cDst.style = cSrc.style;\n          // eslint-disable-next-line no-underscore-dangle\n          cDst._comment = cSrc._comment;\n        } else {\n          this._cells[i + nExpand - 1] = undefined;\n        }\n      }\n    }\n\n    // now add the new values\n    for (i = 0; i < inserts.length; i++) {\n      cDst = this.getCell(start + i);\n      cDst.value = inserts[i];\n      cDst.style = {};\n      // eslint-disable-next-line no-underscore-dangle\n      cDst._comment = undefined;\n    }\n  }\n\n  // Iterate over all non-null cells in this row\n  eachCell(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = null;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._cells.length;\n      for (let i = 1; i <= n; i++) {\n        iteratee(this.getCell(i), i);\n      }\n    } else {\n      this._cells.forEach((cell, index) => {\n        if (cell && cell.type !== Enums.ValueType.Null) {\n          iteratee(cell, index + 1);\n        }\n      });\n    }\n  }\n\n  // ===========================================================================\n  // Page Breaks\n  addPageBreak(lft, rght) {\n    const ws = this._worksheet;\n    const left = Math.max(0, lft - 1) || 0;\n    const right = Math.max(0, rght - 1) || 16838;\n    const pb = {\n      id: this._number,\n      max: right,\n      man: 1,\n    };\n    if (left) pb.min = left;\n\n    ws.rowBreaks.push(pb);\n  }\n\n  // return a sparse array of cell values\n  get values() {\n    const values = [];\n    this._cells.forEach(cell => {\n      if (cell && cell.type !== Enums.ValueType.Null) {\n        values[cell.col] = cell.value;\n      }\n    });\n    return values;\n  }\n\n  // set the values by contiguous or sparse array, or by key'd object literal\n  set values(value) {\n    // this operation is not additive - any prior cells are removed\n    this._cells = [];\n    if (!value) {\n      // empty row\n    } else if (value instanceof Array) {\n      let offset = 0;\n      if (value.hasOwnProperty('0')) {\n        // contiguous array - start at column 1\n        offset = 1;\n      }\n      value.forEach((item, index) => {\n        if (item !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, index + offset),\n            row: this._number,\n            col: index + offset,\n          }).value = item;\n        }\n      });\n    } else {\n      // assume object with column keys\n      this._worksheet.eachColumnKey((column, key) => {\n        if (value[key] !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, column.number),\n            row: this._number,\n            col: column.number,\n          }).value = value[key];\n        }\n      });\n    }\n  }\n\n  // returns true if the row includes at least one cell with a value\n  get hasValues() {\n    return _.some(this._cells, cell => cell && cell.type !== Enums.ValueType.Null);\n  }\n\n  get cellCount() {\n    return this._cells.length;\n  }\n\n  get actualCellCount() {\n    let count = 0;\n    this.eachCell(() => {\n      count++;\n    });\n    return count;\n  }\n\n  // get the min and max column number for the non-null cells in this row or null\n  get dimensions() {\n    let min = 0;\n    let max = 0;\n    this._cells.forEach(cell => {\n      if (cell && cell.type !== Enums.ValueType.Null) {\n        if (!min || min > cell.col) {\n          min = cell.col;\n        }\n        if (max < cell.col) {\n          max = cell.col;\n        }\n      }\n    });\n    return min > 0\n      ? {\n          min,\n          max,\n        }\n      : null;\n  }\n\n  // =========================================================================\n  // styles\n  _applyStyle(name, value) {\n    this.style[name] = value;\n    this._cells.forEach(cell => {\n      if (cell) {\n        cell[name] = value;\n      }\n    });\n    return value;\n  }\n\n  get numFmt() {\n    return this.style.numFmt;\n  }\n\n  set numFmt(value) {\n    this._applyStyle('numFmt', value);\n  }\n\n  get font() {\n    return this.style.font;\n  }\n\n  set font(value) {\n    this._applyStyle('font', value);\n  }\n\n  get alignment() {\n    return this.style.alignment;\n  }\n\n  set alignment(value) {\n    this._applyStyle('alignment', value);\n  }\n\n  get protection() {\n    return this.style.protection;\n  }\n\n  set protection(value) {\n    this._applyStyle('protection', value);\n  }\n\n  get border() {\n    return this.style.border;\n  }\n\n  set border(value) {\n    this._applyStyle('border', value);\n  }\n\n  get fill() {\n    return this.style.fill;\n  }\n\n  set fill(value) {\n    this._applyStyle('fill', value);\n  }\n\n  get hidden() {\n    return !!this._hidden;\n  }\n\n  set hidden(value) {\n    this._hidden = value;\n  }\n\n  get outlineLevel() {\n    return this._outlineLevel || 0;\n  }\n\n  set outlineLevel(value) {\n    this._outlineLevel = value;\n  }\n\n  get collapsed() {\n    return !!(\n      this._outlineLevel && this._outlineLevel >= this._worksheet.properties.outlineLevelRow\n    );\n  }\n\n  // =========================================================================\n  get model() {\n    const cells = [];\n    let min = 0;\n    let max = 0;\n    this._cells.forEach(cell => {\n      if (cell) {\n        const cellModel = cell.model;\n        if (cellModel) {\n          if (!min || min > cell.col) {\n            min = cell.col;\n          }\n          if (max < cell.col) {\n            max = cell.col;\n          }\n          cells.push(cellModel);\n        }\n      }\n    });\n\n    return this.height || cells.length\n      ? {\n          cells,\n          number: this.number,\n          min,\n          max,\n          height: this.height,\n          style: this.style,\n          hidden: this.hidden,\n          outlineLevel: this.outlineLevel,\n          collapsed: this.collapsed,\n        }\n      : null;\n  }\n\n  set model(value) {\n    if (value.number !== this._number) {\n      throw new Error('Invalid row number in model');\n    }\n    this._cells = [];\n    let previousAddress;\n    value.cells.forEach(cellModel => {\n      switch (cellModel.type) {\n        case Cell.Types.Merge:\n          // special case - don't add this types\n          break;\n        default: {\n          let address;\n          if (cellModel.address) {\n            address = colCache.decodeAddress(cellModel.address);\n          } else if (previousAddress) {\n            // This is a <c> element without an r attribute\n            // Assume that it's the cell for the next column\n            const {row} = previousAddress;\n            const col = previousAddress.col + 1;\n            address = {\n              row,\n              col,\n              address: colCache.encodeAddress(row, col),\n              $col$row: `$${colCache.n2l(col)}$${row}`,\n            };\n          }\n          previousAddress = address;\n          const cell = this.getCellEx(address);\n          cell.model = cellModel;\n          break;\n        }\n      }\n    });\n\n    if (value.height) {\n      this.height = value.height;\n    } else {\n      delete this.height;\n    }\n\n    this.hidden = value.hidden;\n    this.outlineLevel = value.outlineLevel || 0;\n\n    this.style = (value.style && JSON.parse(JSON.stringify(value.style))) || {};\n  }\n}\n\nmodule.exports = Row;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,IAAMA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAExC,IAAMC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAME,QAAQ,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC9C,IAAMG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAAC,IAEzBI,GAAG;EACP,aAAYC,SAAS,EAAEC,MAAM,EAAE;IAAA;IAC7B,IAAI,CAACC,UAAU,GAAGF,SAAS;IAC3B,IAAI,CAACG,OAAO,GAAGF,MAAM;IACrB,IAAI,CAACG,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,YAAY,GAAG,CAAC;EACvB;;EAEA;EAAA;IAAA;IAAA,KACA,eAAa;MACX,OAAO,IAAI,CAACH,OAAO;IACrB;EAAC;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,IAAI,CAACD,UAAU;IACxB;;IAEA;IACA;EAAA;IAAA;IAAA,OACA,kBAAS;MACP,IAAI,CAACA,UAAU,CAACK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC;;IAEA;EAAA;IAAA;IAAA,OACA,mBAAU;MACR,OAAO,IAAI,CAACL,UAAU;MACtB,OAAO,IAAI,CAACE,MAAM;MAClB,OAAO,IAAI,CAACC,KAAK;IACnB;EAAC;IAAA;IAAA,OAED,kBAASG,SAAS,EAAE;MAClB,OAAO,IAAI,CAACJ,MAAM,CAACI,SAAS,GAAG,CAAC,CAAC;IACnC;;IAEA;EAAA;IAAA;IAAA,OACA,mBAAUC,OAAO,EAAE;MACjB,IAAIC,IAAI,GAAG,IAAI,CAACN,MAAM,CAACK,OAAO,CAACE,GAAG,GAAG,CAAC,CAAC;MACvC,IAAI,CAACD,IAAI,EAAE;QACT,IAAME,MAAM,GAAG,IAAI,CAACV,UAAU,CAACW,SAAS,CAACJ,OAAO,CAACE,GAAG,CAAC;QACrDD,IAAI,GAAG,IAAIZ,IAAI,CAAC,IAAI,EAAEc,MAAM,EAAEH,OAAO,CAACA,OAAO,CAAC;QAC9C,IAAI,CAACL,MAAM,CAACK,OAAO,CAACE,GAAG,GAAG,CAAC,CAAC,GAAGD,IAAI;MACrC;MACA,OAAOA,IAAI;IACb;;IAEA;EAAA;IAAA;IAAA,OACA,iBAAQC,GAAG,EAAE;MACX,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAC3B;QACA,IAAMC,MAAM,GAAG,IAAI,CAACV,UAAU,CAACY,YAAY,CAACH,GAAG,CAAC;QAChD,IAAIC,MAAM,EAAE;UACVD,GAAG,GAAGC,MAAM,CAACX,MAAM;QACrB,CAAC,MAAM;UACLU,GAAG,GAAGd,QAAQ,CAACkB,GAAG,CAACJ,GAAG,CAAC;QACzB;MACF;MACA,OACE,IAAI,CAACP,MAAM,CAACO,GAAG,GAAG,CAAC,CAAC,IACpB,IAAI,CAACK,SAAS,CAAC;QACbP,OAAO,EAAEZ,QAAQ,CAACoB,aAAa,CAAC,IAAI,CAACd,OAAO,EAAEQ,GAAG,CAAC;QAClDO,GAAG,EAAE,IAAI,CAACf,OAAO;QACjBQ,GAAG,EAAHA;MACF,CAAC,CAAC;IAEN;;IAEA;EAAA;IAAA;IAAA,OACA,gBAAOQ,KAAK,EAAEC,KAAK,EAAc;MAC/B,IAAMC,KAAK,GAAGF,KAAK,GAAGC,KAAK;MAAC,kCADNE,OAAO;QAAPA,OAAO;MAAA;MAE7B,IAAMC,OAAO,GAAGD,OAAO,CAACE,MAAM,GAAGJ,KAAK;MACtC,IAAMK,IAAI,GAAG,IAAI,CAACrB,MAAM,CAACoB,MAAM;MAC/B,IAAIE,CAAC;MACL,IAAIC,IAAI;MACR,IAAIC,IAAI;MAER,IAAIL,OAAO,GAAG,CAAC,EAAE;QACf;QACA,KAAKG,CAAC,GAAGP,KAAK,GAAGG,OAAO,CAACE,MAAM,EAAEE,CAAC,IAAID,IAAI,EAAEC,CAAC,EAAE,EAAE;UAC/CE,IAAI,GAAG,IAAI,CAACxB,MAAM,CAACsB,CAAC,GAAG,CAAC,CAAC;UACzBC,IAAI,GAAG,IAAI,CAACvB,MAAM,CAACsB,CAAC,GAAGH,OAAO,GAAG,CAAC,CAAC;UACnC,IAAII,IAAI,EAAE;YACRC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACH,CAAC,CAAC;YACtBE,IAAI,CAACE,KAAK,GAAGH,IAAI,CAACG,KAAK;YACvBF,IAAI,CAACvB,KAAK,GAAGsB,IAAI,CAACtB,KAAK;YACvB;YACAuB,IAAI,CAACG,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;UAC/B,CAAC,MAAM,IAAIH,IAAI,EAAE;YACfA,IAAI,CAACE,KAAK,GAAG,IAAI;YACjBF,IAAI,CAACvB,KAAK,GAAG,CAAC,CAAC;YACf;YACAuB,IAAI,CAACG,QAAQ,GAAGC,SAAS;UAC3B;QACF;MACF,CAAC,MAAM,IAAIT,OAAO,GAAG,CAAC,EAAE;QACtB;QACA,KAAKG,CAAC,GAAGD,IAAI,EAAEC,CAAC,IAAIL,KAAK,EAAEK,CAAC,EAAE,EAAE;UAC9BC,IAAI,GAAG,IAAI,CAACvB,MAAM,CAACsB,CAAC,GAAG,CAAC,CAAC;UACzB,IAAIC,IAAI,EAAE;YACRC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACH,CAAC,GAAGH,OAAO,CAAC;YAChCK,IAAI,CAACE,KAAK,GAAGH,IAAI,CAACG,KAAK;YACvBF,IAAI,CAACvB,KAAK,GAAGsB,IAAI,CAACtB,KAAK;YACvB;YACAuB,IAAI,CAACG,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;UAC/B,CAAC,MAAM;YACL,IAAI,CAAC3B,MAAM,CAACsB,CAAC,GAAGH,OAAO,GAAG,CAAC,CAAC,GAAGS,SAAS;UAC1C;QACF;MACF;;MAEA;MACA,KAAKN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;QACnCE,IAAI,GAAG,IAAI,CAACC,OAAO,CAACV,KAAK,GAAGO,CAAC,CAAC;QAC9BE,IAAI,CAACE,KAAK,GAAGR,OAAO,CAACI,CAAC,CAAC;QACvBE,IAAI,CAACvB,KAAK,GAAG,CAAC,CAAC;QACf;QACAuB,IAAI,CAACG,QAAQ,GAAGC,SAAS;MAC3B;IACF;;IAEA;EAAA;IAAA;IAAA,OACA,kBAASC,OAAO,EAAEC,QAAQ,EAAE;MAC1B,IAAI,CAACA,QAAQ,EAAE;QACbA,QAAQ,GAAGD,OAAO;QAClBA,OAAO,GAAG,IAAI;MAChB;MACA,IAAIA,OAAO,IAAIA,OAAO,CAACE,YAAY,EAAE;QACnC,IAAMC,CAAC,GAAG,IAAI,CAAChC,MAAM,CAACoB,MAAM;QAC5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIU,CAAC,EAAEV,CAAC,EAAE,EAAE;UAC3BQ,QAAQ,CAAC,IAAI,CAACL,OAAO,CAACH,CAAC,CAAC,EAAEA,CAAC,CAAC;QAC9B;MACF,CAAC,MAAM;QACL,IAAI,CAACtB,MAAM,CAACiC,OAAO,CAAC,UAAC3B,IAAI,EAAE4B,KAAK,EAAK;UACnC,IAAI5B,IAAI,IAAIA,IAAI,CAAC6B,IAAI,KAAK3C,KAAK,CAAC4C,SAAS,CAACC,IAAI,EAAE;YAC9CP,QAAQ,CAACxB,IAAI,EAAE4B,KAAK,GAAG,CAAC,CAAC;UAC3B;QACF,CAAC,CAAC;MACJ;IACF;;IAEA;IACA;EAAA;IAAA;IAAA,OACA,sBAAaI,GAAG,EAAEC,IAAI,EAAE;MACtB,IAAMC,EAAE,GAAG,IAAI,CAAC1C,UAAU;MAC1B,IAAM2C,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;MACtC,IAAMM,KAAK,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK;MAC5C,IAAMM,EAAE,GAAG;QACTC,EAAE,EAAE,IAAI,CAAC/C,OAAO;QAChB4C,GAAG,EAAEC,KAAK;QACVG,GAAG,EAAE;MACP,CAAC;MACD,IAAIN,IAAI,EAAEI,EAAE,CAACG,GAAG,GAAGP,IAAI;MAEvBD,EAAE,CAACS,SAAS,CAACC,IAAI,CAACL,EAAE,CAAC;IACvB;;IAEA;EAAA;IAAA;IAAA,KACA,eAAa;MACX,IAAMM,MAAM,GAAG,EAAE;MACjB,IAAI,CAACnD,MAAM,CAACiC,OAAO,CAAC,UAAA3B,IAAI,EAAI;QAC1B,IAAIA,IAAI,IAAIA,IAAI,CAAC6B,IAAI,KAAK3C,KAAK,CAAC4C,SAAS,CAACC,IAAI,EAAE;UAC9Cc,MAAM,CAAC7C,IAAI,CAACC,GAAG,CAAC,GAAGD,IAAI,CAACoB,KAAK;QAC/B;MACF,CAAC,CAAC;MACF,OAAOyB,MAAM;IACf;;IAEA;IAAA;IAAA,KACA,aAAWzB,KAAK,EAAE;MAAA;MAChB;MACA,IAAI,CAAC1B,MAAM,GAAG,EAAE;MAChB,IAAI,CAAC0B,KAAK,EAAE;QACV;MAAA,CACD,MAAM,IAAIA,KAAK,YAAY0B,KAAK,EAAE;QACjC,IAAIC,MAAM,GAAG,CAAC;QACd,IAAI3B,KAAK,CAAC4B,cAAc,CAAC,GAAG,CAAC,EAAE;UAC7B;UACAD,MAAM,GAAG,CAAC;QACZ;QACA3B,KAAK,CAACO,OAAO,CAAC,UAACsB,IAAI,EAAErB,KAAK,EAAK;UAC7B,IAAIqB,IAAI,KAAK3B,SAAS,EAAE;YACtB,KAAI,CAAChB,SAAS,CAAC;cACbP,OAAO,EAAEZ,QAAQ,CAACoB,aAAa,CAAC,KAAI,CAACd,OAAO,EAAEmC,KAAK,GAAGmB,MAAM,CAAC;cAC7DvC,GAAG,EAAE,KAAI,CAACf,OAAO;cACjBQ,GAAG,EAAE2B,KAAK,GAAGmB;YACf,CAAC,CAAC,CAAC3B,KAAK,GAAG6B,IAAI;UACjB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA,IAAI,CAACzD,UAAU,CAAC0D,aAAa,CAAC,UAAChD,MAAM,EAAEiD,GAAG,EAAK;UAC7C,IAAI/B,KAAK,CAAC+B,GAAG,CAAC,KAAK7B,SAAS,EAAE;YAC5B,KAAI,CAAChB,SAAS,CAAC;cACbP,OAAO,EAAEZ,QAAQ,CAACoB,aAAa,CAAC,KAAI,CAACd,OAAO,EAAES,MAAM,CAACX,MAAM,CAAC;cAC5DiB,GAAG,EAAE,KAAI,CAACf,OAAO;cACjBQ,GAAG,EAAEC,MAAM,CAACX;YACd,CAAC,CAAC,CAAC6B,KAAK,GAAGA,KAAK,CAAC+B,GAAG,CAAC;UACvB;QACF,CAAC,CAAC;MACJ;IACF;;IAEA;EAAA;IAAA;IAAA,KACA,eAAgB;MACd,OAAOnE,CAAC,CAACoE,IAAI,CAAC,IAAI,CAAC1D,MAAM,EAAE,UAAAM,IAAI;QAAA,OAAIA,IAAI,IAAIA,IAAI,CAAC6B,IAAI,KAAK3C,KAAK,CAAC4C,SAAS,CAACC,IAAI;MAAA,EAAC;IAChF;EAAC;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,IAAI,CAACrC,MAAM,CAACoB,MAAM;IAC3B;EAAC;IAAA;IAAA,KAED,eAAsB;MACpB,IAAIJ,KAAK,GAAG,CAAC;MACb,IAAI,CAAC2C,QAAQ,CAAC,YAAM;QAClB3C,KAAK,EAAE;MACT,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;;IAEA;EAAA;IAAA;IAAA,KACA,eAAiB;MACf,IAAIgC,GAAG,GAAG,CAAC;MACX,IAAIL,GAAG,GAAG,CAAC;MACX,IAAI,CAAC3C,MAAM,CAACiC,OAAO,CAAC,UAAA3B,IAAI,EAAI;QAC1B,IAAIA,IAAI,IAAIA,IAAI,CAAC6B,IAAI,KAAK3C,KAAK,CAAC4C,SAAS,CAACC,IAAI,EAAE;UAC9C,IAAI,CAACW,GAAG,IAAIA,GAAG,GAAG1C,IAAI,CAACC,GAAG,EAAE;YAC1ByC,GAAG,GAAG1C,IAAI,CAACC,GAAG;UAChB;UACA,IAAIoC,GAAG,GAAGrC,IAAI,CAACC,GAAG,EAAE;YAClBoC,GAAG,GAAGrC,IAAI,CAACC,GAAG;UAChB;QACF;MACF,CAAC,CAAC;MACF,OAAOyC,GAAG,GAAG,CAAC,GACV;QACEA,GAAG,EAAHA,GAAG;QACHL,GAAG,EAAHA;MACF,CAAC,GACD,IAAI;IACV;;IAEA;IACA;EAAA;IAAA;IAAA,OACA,qBAAYiB,IAAI,EAAElC,KAAK,EAAE;MACvB,IAAI,CAACzB,KAAK,CAAC2D,IAAI,CAAC,GAAGlC,KAAK;MACxB,IAAI,CAAC1B,MAAM,CAACiC,OAAO,CAAC,UAAA3B,IAAI,EAAI;QAC1B,IAAIA,IAAI,EAAE;UACRA,IAAI,CAACsD,IAAI,CAAC,GAAGlC,KAAK;QACpB;MACF,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;EAAC;IAAA;IAAA,KAED,eAAa;MACX,OAAO,IAAI,CAACzB,KAAK,CAAC4D,MAAM;IAC1B,CAAC;IAAA,KAED,aAAWnC,KAAK,EAAE;MAChB,IAAI,CAACoC,WAAW,CAAC,QAAQ,EAAEpC,KAAK,CAAC;IACnC;EAAC;IAAA;IAAA,KAED,eAAW;MACT,OAAO,IAAI,CAACzB,KAAK,CAAC8D,IAAI;IACxB,CAAC;IAAA,KAED,aAASrC,KAAK,EAAE;MACd,IAAI,CAACoC,WAAW,CAAC,MAAM,EAAEpC,KAAK,CAAC;IACjC;EAAC;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,IAAI,CAACzB,KAAK,CAAC+D,SAAS;IAC7B,CAAC;IAAA,KAED,aAActC,KAAK,EAAE;MACnB,IAAI,CAACoC,WAAW,CAAC,WAAW,EAAEpC,KAAK,CAAC;IACtC;EAAC;IAAA;IAAA,KAED,eAAiB;MACf,OAAO,IAAI,CAACzB,KAAK,CAACgE,UAAU;IAC9B,CAAC;IAAA,KAED,aAAevC,KAAK,EAAE;MACpB,IAAI,CAACoC,WAAW,CAAC,YAAY,EAAEpC,KAAK,CAAC;IACvC;EAAC;IAAA;IAAA,KAED,eAAa;MACX,OAAO,IAAI,CAACzB,KAAK,CAACiE,MAAM;IAC1B,CAAC;IAAA,KAED,aAAWxC,KAAK,EAAE;MAChB,IAAI,CAACoC,WAAW,CAAC,QAAQ,EAAEpC,KAAK,CAAC;IACnC;EAAC;IAAA;IAAA,KAED,eAAW;MACT,OAAO,IAAI,CAACzB,KAAK,CAACkE,IAAI;IACxB,CAAC;IAAA,KAED,aAASzC,KAAK,EAAE;MACd,IAAI,CAACoC,WAAW,CAAC,MAAM,EAAEpC,KAAK,CAAC;IACjC;EAAC;IAAA;IAAA,KAED,eAAa;MACX,OAAO,CAAC,CAAC,IAAI,CAAC0C,OAAO;IACvB,CAAC;IAAA,KAED,aAAW1C,KAAK,EAAE;MAChB,IAAI,CAAC0C,OAAO,GAAG1C,KAAK;IACtB;EAAC;IAAA;IAAA,KAED,eAAmB;MACjB,OAAO,IAAI,CAAC2C,aAAa,IAAI,CAAC;IAChC,CAAC;IAAA,KAED,aAAiB3C,KAAK,EAAE;MACtB,IAAI,CAAC2C,aAAa,GAAG3C,KAAK;IAC5B;EAAC;IAAA;IAAA,KAED,eAAgB;MACd,OAAO,CAAC,EACN,IAAI,CAAC2C,aAAa,IAAI,IAAI,CAACA,aAAa,IAAI,IAAI,CAACvE,UAAU,CAACwE,UAAU,CAACC,eAAe,CACvF;IACH;;IAEA;EAAA;IAAA;IAAA,KACA,eAAY;MACV,IAAMC,KAAK,GAAG,EAAE;MAChB,IAAIxB,GAAG,GAAG,CAAC;MACX,IAAIL,GAAG,GAAG,CAAC;MACX,IAAI,CAAC3C,MAAM,CAACiC,OAAO,CAAC,UAAA3B,IAAI,EAAI;QAC1B,IAAIA,IAAI,EAAE;UACR,IAAMmE,SAAS,GAAGnE,IAAI,CAACoE,KAAK;UAC5B,IAAID,SAAS,EAAE;YACb,IAAI,CAACzB,GAAG,IAAIA,GAAG,GAAG1C,IAAI,CAACC,GAAG,EAAE;cAC1ByC,GAAG,GAAG1C,IAAI,CAACC,GAAG;YAChB;YACA,IAAIoC,GAAG,GAAGrC,IAAI,CAACC,GAAG,EAAE;cAClBoC,GAAG,GAAGrC,IAAI,CAACC,GAAG;YAChB;YACAiE,KAAK,CAACtB,IAAI,CAACuB,SAAS,CAAC;UACvB;QACF;MACF,CAAC,CAAC;MAEF,OAAO,IAAI,CAACE,MAAM,IAAIH,KAAK,CAACpD,MAAM,GAC9B;QACEoD,KAAK,EAALA,KAAK;QACL3E,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBmD,GAAG,EAAHA,GAAG;QACHL,GAAG,EAAHA,GAAG;QACHgC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnB1E,KAAK,EAAE,IAAI,CAACA,KAAK;QACjB2E,MAAM,EAAE,IAAI,CAACA,MAAM;QACnB1E,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/B2E,SAAS,EAAE,IAAI,CAACA;MAClB,CAAC,GACD,IAAI;IACV,CAAC;IAAA,KAED,aAAUnD,KAAK,EAAE;MAAA;MACf,IAAIA,KAAK,CAAC7B,MAAM,KAAK,IAAI,CAACE,OAAO,EAAE;QACjC,MAAM,IAAI+E,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,IAAI,CAAC9E,MAAM,GAAG,EAAE;MAChB,IAAI+E,eAAe;MACnBrD,KAAK,CAAC8C,KAAK,CAACvC,OAAO,CAAC,UAAAwC,SAAS,EAAI;QAC/B,QAAQA,SAAS,CAACtC,IAAI;UACpB,KAAKzC,IAAI,CAACsF,KAAK,CAACC,KAAK;YACnB;YACA;UACF;YAAS;cACP,IAAI5E,OAAO;cACX,IAAIoE,SAAS,CAACpE,OAAO,EAAE;gBACrBA,OAAO,GAAGZ,QAAQ,CAACyF,aAAa,CAACT,SAAS,CAACpE,OAAO,CAAC;cACrD,CAAC,MAAM,IAAI0E,eAAe,EAAE;gBAC1B;gBACA;gBACA,uBAAcA,eAAe;kBAAtBjE,GAAG,oBAAHA,GAAG;gBACV,IAAMP,GAAG,GAAGwE,eAAe,CAACxE,GAAG,GAAG,CAAC;gBACnCF,OAAO,GAAG;kBACRS,GAAG,EAAHA,GAAG;kBACHP,GAAG,EAAHA,GAAG;kBACHF,OAAO,EAAEZ,QAAQ,CAACoB,aAAa,CAACC,GAAG,EAAEP,GAAG,CAAC;kBACzC4E,QAAQ,aAAM1F,QAAQ,CAAC2F,GAAG,CAAC7E,GAAG,CAAC,cAAIO,GAAG;gBACxC,CAAC;cACH;cACAiE,eAAe,GAAG1E,OAAO;cACzB,IAAMC,IAAI,GAAG,MAAI,CAACM,SAAS,CAACP,OAAO,CAAC;cACpCC,IAAI,CAACoE,KAAK,GAAGD,SAAS;cACtB;YACF;QAAC;MAEL,CAAC,CAAC;MAEF,IAAI/C,KAAK,CAACiD,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,GAAGjD,KAAK,CAACiD,MAAM;MAC5B,CAAC,MAAM;QACL,OAAO,IAAI,CAACA,MAAM;MACpB;MAEA,IAAI,CAACC,MAAM,GAAGlD,KAAK,CAACkD,MAAM;MAC1B,IAAI,CAAC1E,YAAY,GAAGwB,KAAK,CAACxB,YAAY,IAAI,CAAC;MAE3C,IAAI,CAACD,KAAK,GAAIyB,KAAK,CAACzB,KAAK,IAAIoF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC7D,KAAK,CAACzB,KAAK,CAAC,CAAC,IAAK,CAAC,CAAC;IAC7E;EAAC;EAAA;AAAA;AAGHuF,MAAM,CAACC,OAAO,GAAG9F,GAAG"}