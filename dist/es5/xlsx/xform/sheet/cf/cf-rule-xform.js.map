{"version":3,"file":"cf-rule-xform.js","names":["BaseXform","require","CompositeXform","Range","DatabarXform","ExtLstRefXform","FormulaXform","ColorScaleXform","IconSetXform","extIcons","getTextFormula","model","formulae","range","ref","tl","operator","text","undefined","getTimePeriodFormula","timePeriod","opType","attributes","type","CfRuleXform","map","dataBar","databarXform","extLst","extLstRefXform","formula","formulaXform","colorScale","colorScaleXform","iconSet","iconSetXform","xmlStream","renderExpression","renderCellIs","renderTop10","renderAboveAverage","renderDataBar","renderColorScale","renderIconSet","renderText","renderTimePeriod","openNode","tag","dxfId","priority","render","closeNode","forEach","leafNode","percent","toBoolAttribute","bottom","rank","toIntValue","aboveAverage","isPrimitive","toStringAttribute","toBoolValue","name","parser","Object","assign","push","rule","custom","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf/cf-rule-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\nconst CompositeXform = require('../../composite-xform');\n\nconst Range = require('../../../../doc/range');\n\nconst DatabarXform = require('./databar-xform');\nconst ExtLstRefXform = require('./ext-lst-ref-xform');\nconst FormulaXform = require('./formula-xform');\nconst ColorScaleXform = require('./color-scale-xform');\nconst IconSetXform = require('./icon-set-xform');\n\nconst extIcons = {\n  '3Triangles': true,\n  '3Stars': true,\n  '5Boxes': true,\n};\n\nconst getTextFormula = model => {\n  if (model.formulae && model.formulae[0]) {\n    return model.formulae[0];\n  }\n\n  const range = new Range(model.ref);\n  const {tl} = range;\n  switch (model.operator) {\n    case 'containsText':\n      return `NOT(ISERROR(SEARCH(\"${model.text}\",${tl})))`;\n    case 'containsBlanks':\n      return `LEN(TRIM(${tl}))=0`;\n    case 'notContainsBlanks':\n      return `LEN(TRIM(${tl}))>0`;\n    case 'containsErrors':\n      return `ISERROR(${tl})`;\n    case 'notContainsErrors':\n      return `NOT(ISERROR(${tl}))`;\n    default:\n      return undefined;\n  }\n};\n\nconst getTimePeriodFormula = model => {\n  if (model.formulae && model.formulae[0]) {\n    return model.formulae[0];\n  }\n\n  const range = new Range(model.ref);\n  const {tl} = range;\n  switch (model.timePeriod) {\n    case 'thisWeek':\n      return `AND(TODAY()-ROUNDDOWN(${tl},0)<=WEEKDAY(TODAY())-1,ROUNDDOWN(${tl},0)-TODAY()<=7-WEEKDAY(TODAY()))`;\n    case 'lastWeek':\n      return `AND(TODAY()-ROUNDDOWN(${tl},0)>=(WEEKDAY(TODAY())),TODAY()-ROUNDDOWN(${tl},0)<(WEEKDAY(TODAY())+7))`;\n    case 'nextWeek':\n      return `AND(ROUNDDOWN(${tl},0)-TODAY()>(7-WEEKDAY(TODAY())),ROUNDDOWN(${tl},0)-TODAY()<(15-WEEKDAY(TODAY())))`;\n    case 'yesterday':\n      return `FLOOR(${tl},1)=TODAY()-1`;\n    case 'today':\n      return `FLOOR(${tl},1)=TODAY()`;\n    case 'tomorrow':\n      return `FLOOR(${tl},1)=TODAY()+1`;\n    case 'last7Days':\n      return `AND(TODAY()-FLOOR(${tl},1)<=6,FLOOR(${tl},1)<=TODAY())`;\n    case 'lastMonth':\n      return `AND(MONTH(${tl})=MONTH(EDATE(TODAY(),0-1)),YEAR(${tl})=YEAR(EDATE(TODAY(),0-1)))`;\n    case 'thisMonth':\n      return `AND(MONTH(${tl})=MONTH(TODAY()),YEAR(${tl})=YEAR(TODAY()))`;\n    case 'nextMonth':\n      return `AND(MONTH(${tl})=MONTH(EDATE(TODAY(),0+1)),YEAR(${tl})=YEAR(EDATE(TODAY(),0+1)))`;\n    default:\n      return undefined;\n  }\n};\n\nconst opType = attributes => {\n  const {type, operator} = attributes;\n  switch (type) {\n    case 'containsText':\n    case 'containsBlanks':\n    case 'notContainsBlanks':\n    case 'containsErrors':\n    case 'notContainsErrors':\n      return {\n        type: 'containsText',\n        operator: type,\n      };\n\n    default:\n      return {type, operator};\n  }\n};\n\nclass CfRuleXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      dataBar: (this.databarXform = new DatabarXform()),\n      extLst: (this.extLstRefXform = new ExtLstRefXform()),\n      formula: (this.formulaXform = new FormulaXform()),\n      colorScale: (this.colorScaleXform = new ColorScaleXform()),\n      iconSet: (this.iconSetXform = new IconSetXform()),\n    };\n  }\n\n  get tag() {\n    return 'cfRule';\n  }\n\n  static isPrimitive(rule) {\n    // is this rule primitive?\n    if (rule.type === 'iconSet') {\n      if (rule.custom || extIcons[rule.iconSet]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  render(xmlStream, model) {\n    switch (model.type) {\n      case 'expression':\n        this.renderExpression(xmlStream, model);\n        break;\n      case 'cellIs':\n        this.renderCellIs(xmlStream, model);\n        break;\n      case 'top10':\n        this.renderTop10(xmlStream, model);\n        break;\n      case 'aboveAverage':\n        this.renderAboveAverage(xmlStream, model);\n        break;\n      case 'dataBar':\n        this.renderDataBar(xmlStream, model);\n        break;\n      case 'colorScale':\n        this.renderColorScale(xmlStream, model);\n        break;\n      case 'iconSet':\n        this.renderIconSet(xmlStream, model);\n        break;\n      case 'containsText':\n        this.renderText(xmlStream, model);\n        break;\n      case 'timePeriod':\n        this.renderTimePeriod(xmlStream, model);\n        break;\n    }\n  }\n\n  renderExpression(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'expression',\n      dxfId: model.dxfId,\n      priority: model.priority,\n    });\n\n    this.formulaXform.render(xmlStream, model.formulae[0]);\n\n    xmlStream.closeNode();\n  }\n\n  renderCellIs(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'cellIs',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      operator: model.operator,\n    });\n\n    model.formulae.forEach(formula => {\n      this.formulaXform.render(xmlStream, formula);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  renderTop10(xmlStream, model) {\n    xmlStream.leafNode(this.tag, {\n      type: 'top10',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      percent: BaseXform.toBoolAttribute(model.percent, false),\n      bottom: BaseXform.toBoolAttribute(model.bottom, false),\n      rank: BaseXform.toIntValue(model.rank, 10, true),\n    });\n  }\n\n  renderAboveAverage(xmlStream, model) {\n    xmlStream.leafNode(this.tag, {\n      type: 'aboveAverage',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      aboveAverage: BaseXform.toBoolAttribute(model.aboveAverage, true),\n    });\n  }\n\n  renderDataBar(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'dataBar',\n      priority: model.priority,\n    });\n\n    this.databarXform.render(xmlStream, model);\n    this.extLstRefXform.render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  renderColorScale(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'colorScale',\n      priority: model.priority,\n    });\n\n    this.colorScaleXform.render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  renderIconSet(xmlStream, model) {\n    // iconset is all primitive or all extLst\n    if (!CfRuleXform.isPrimitive(model)) {\n      return;\n    }\n\n    xmlStream.openNode(this.tag, {\n      type: 'iconSet',\n      priority: model.priority,\n    });\n\n    this.iconSetXform.render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  renderText(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: model.operator,\n      dxfId: model.dxfId,\n      priority: model.priority,\n      operator: BaseXform.toStringAttribute(model.operator, 'containsText'),\n    });\n\n    const formula = getTextFormula(model);\n    if (formula) {\n      this.formulaXform.render(xmlStream, formula);\n    }\n\n    xmlStream.closeNode();\n  }\n\n  renderTimePeriod(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'timePeriod',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      timePeriod: model.timePeriod,\n    });\n\n    const formula = getTimePeriodFormula(model);\n    if (formula) {\n      this.formulaXform.render(xmlStream, formula);\n    }\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel({attributes}) {\n    return {\n      ...opType(attributes),\n      dxfId: BaseXform.toIntValue(attributes.dxfId),\n      priority: BaseXform.toIntValue(attributes.priority),\n      timePeriod: attributes.timePeriod,\n      percent: BaseXform.toBoolValue(attributes.percent),\n      bottom: BaseXform.toBoolValue(attributes.bottom),\n      rank: BaseXform.toIntValue(attributes.rank),\n      aboveAverage: BaseXform.toBoolValue(attributes.aboveAverage),\n    };\n  }\n\n  onParserClose(name, parser) {\n    switch (name) {\n      case 'dataBar':\n      case 'extLst':\n      case 'colorScale':\n      case 'iconSet':\n        // merge parser model with ours\n        Object.assign(this.model, parser.model);\n        break;\n\n      case 'formula':\n        // except - formula is a string and appends to formulae\n        this.model.formulae = this.model.formulae || [];\n        this.model.formulae.push(parser.model);\n        break;\n    }\n  }\n}\n\nmodule.exports = CfRuleXform;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAMC,cAAc,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAEvD,IAAME,KAAK,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAE9C,IAAMG,YAAY,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC/C,IAAMI,cAAc,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AACrD,IAAMK,YAAY,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AAC/C,IAAMM,eAAe,GAAGN,OAAO,CAAC,qBAAqB,CAAC;AACtD,IAAMO,YAAY,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAEhD,IAAMQ,QAAQ,GAAG;EACf,YAAY,EAAE,IAAI;EAClB,QAAQ,EAAE,IAAI;EACd,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,KAAK,EAAI;EAC9B,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACvC,OAAOD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC1B;EAEA,IAAMC,KAAK,GAAG,IAAIV,KAAK,CAACQ,KAAK,CAACG,GAAG,CAAC;EAClC,IAAOC,EAAE,GAAIF,KAAK,CAAXE,EAAE;EACT,QAAQJ,KAAK,CAACK,QAAQ;IACpB,KAAK,cAAc;MACjB,sCAA8BL,KAAK,CAACM,IAAI,gBAAKF,EAAE;IACjD,KAAK,gBAAgB;MACnB,0BAAmBA,EAAE;IACvB,KAAK,mBAAmB;MACtB,0BAAmBA,EAAE;IACvB,KAAK,gBAAgB;MACnB,yBAAkBA,EAAE;IACtB,KAAK,mBAAmB;MACtB,6BAAsBA,EAAE;IAC1B;MACE,OAAOG,SAAS;EAAC;AAEvB,CAAC;AAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAGR,KAAK,EAAI;EACpC,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACvC,OAAOD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC1B;EAEA,IAAMC,KAAK,GAAG,IAAIV,KAAK,CAACQ,KAAK,CAACG,GAAG,CAAC;EAClC,IAAOC,EAAE,GAAIF,KAAK,CAAXE,EAAE;EACT,QAAQJ,KAAK,CAACS,UAAU;IACtB,KAAK,UAAU;MACb,uCAAgCL,EAAE,+CAAqCA,EAAE;IAC3E,KAAK,UAAU;MACb,uCAAgCA,EAAE,uDAA6CA,EAAE;IACnF,KAAK,UAAU;MACb,+BAAwBA,EAAE,wDAA8CA,EAAE;IAC5E,KAAK,WAAW;MACd,uBAAgBA,EAAE;IACpB,KAAK,OAAO;MACV,uBAAgBA,EAAE;IACpB,KAAK,UAAU;MACb,uBAAgBA,EAAE;IACpB,KAAK,WAAW;MACd,mCAA4BA,EAAE,0BAAgBA,EAAE;IAClD,KAAK,WAAW;MACd,2BAAoBA,EAAE,8CAAoCA,EAAE;IAC9D,KAAK,WAAW;MACd,2BAAoBA,EAAE,mCAAyBA,EAAE;IACnD,KAAK,WAAW;MACd,2BAAoBA,EAAE,8CAAoCA,EAAE;IAC9D;MACE,OAAOG,SAAS;EAAC;AAEvB,CAAC;AAED,IAAMG,MAAM,GAAG,SAATA,MAAM,CAAGC,UAAU,EAAI;EAC3B,IAAOC,IAAI,GAAcD,UAAU,CAA5BC,IAAI;IAAEP,QAAQ,GAAIM,UAAU,CAAtBN,QAAQ;EACrB,QAAQO,IAAI;IACV,KAAK,cAAc;IACnB,KAAK,gBAAgB;IACrB,KAAK,mBAAmB;IACxB,KAAK,gBAAgB;IACrB,KAAK,mBAAmB;MACtB,OAAO;QACLA,IAAI,EAAE,cAAc;QACpBP,QAAQ,EAAEO;MACZ,CAAC;IAEH;MACE,OAAO;QAACA,IAAI,EAAJA,IAAI;QAAEP,QAAQ,EAARA;MAAQ,CAAC;EAAC;AAE9B,CAAC;AAAC,IAEIQ,WAAW;EAAA;EAAA;EACf,uBAAc;IAAA;IAAA;IACZ;IAEA,MAAKC,GAAG,GAAG;MACTC,OAAO,EAAG,MAAKC,YAAY,GAAG,IAAIvB,YAAY,EAAG;MACjDwB,MAAM,EAAG,MAAKC,cAAc,GAAG,IAAIxB,cAAc,EAAG;MACpDyB,OAAO,EAAG,MAAKC,YAAY,GAAG,IAAIzB,YAAY,EAAG;MACjD0B,UAAU,EAAG,MAAKC,eAAe,GAAG,IAAI1B,eAAe,EAAG;MAC1D2B,OAAO,EAAG,MAAKC,YAAY,GAAG,IAAI3B,YAAY;IAChD,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,KAED,eAAU;MACR,OAAO,QAAQ;IACjB;EAAC;IAAA;IAAA,OAYD,gBAAO4B,SAAS,EAAEzB,KAAK,EAAE;MACvB,QAAQA,KAAK,CAACY,IAAI;QAChB,KAAK,YAAY;UACf,IAAI,CAACc,gBAAgB,CAACD,SAAS,EAAEzB,KAAK,CAAC;UACvC;QACF,KAAK,QAAQ;UACX,IAAI,CAAC2B,YAAY,CAACF,SAAS,EAAEzB,KAAK,CAAC;UACnC;QACF,KAAK,OAAO;UACV,IAAI,CAAC4B,WAAW,CAACH,SAAS,EAAEzB,KAAK,CAAC;UAClC;QACF,KAAK,cAAc;UACjB,IAAI,CAAC6B,kBAAkB,CAACJ,SAAS,EAAEzB,KAAK,CAAC;UACzC;QACF,KAAK,SAAS;UACZ,IAAI,CAAC8B,aAAa,CAACL,SAAS,EAAEzB,KAAK,CAAC;UACpC;QACF,KAAK,YAAY;UACf,IAAI,CAAC+B,gBAAgB,CAACN,SAAS,EAAEzB,KAAK,CAAC;UACvC;QACF,KAAK,SAAS;UACZ,IAAI,CAACgC,aAAa,CAACP,SAAS,EAAEzB,KAAK,CAAC;UACpC;QACF,KAAK,cAAc;UACjB,IAAI,CAACiC,UAAU,CAACR,SAAS,EAAEzB,KAAK,CAAC;UACjC;QACF,KAAK,YAAY;UACf,IAAI,CAACkC,gBAAgB,CAACT,SAAS,EAAEzB,KAAK,CAAC;UACvC;MAAM;IAEZ;EAAC;IAAA;IAAA,OAED,0BAAiByB,SAAS,EAAEzB,KAAK,EAAE;MACjCyB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAE,YAAY;QAClByB,KAAK,EAAErC,KAAK,CAACqC,KAAK;QAClBC,QAAQ,EAAEtC,KAAK,CAACsC;MAClB,CAAC,CAAC;MAEF,IAAI,CAAClB,YAAY,CAACmB,MAAM,CAACd,SAAS,EAAEzB,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAEtDwB,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,sBAAaf,SAAS,EAAEzB,KAAK,EAAE;MAAA;MAC7ByB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAE,QAAQ;QACdyB,KAAK,EAAErC,KAAK,CAACqC,KAAK;QAClBC,QAAQ,EAAEtC,KAAK,CAACsC,QAAQ;QACxBjC,QAAQ,EAAEL,KAAK,CAACK;MAClB,CAAC,CAAC;MAEFL,KAAK,CAACC,QAAQ,CAACwC,OAAO,CAAC,UAAAtB,OAAO,EAAI;QAChC,MAAI,CAACC,YAAY,CAACmB,MAAM,CAACd,SAAS,EAAEN,OAAO,CAAC;MAC9C,CAAC,CAAC;MAEFM,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,qBAAYf,SAAS,EAAEzB,KAAK,EAAE;MAC5ByB,SAAS,CAACiB,QAAQ,CAAC,IAAI,CAACN,GAAG,EAAE;QAC3BxB,IAAI,EAAE,OAAO;QACbyB,KAAK,EAAErC,KAAK,CAACqC,KAAK;QAClBC,QAAQ,EAAEtC,KAAK,CAACsC,QAAQ;QACxBK,OAAO,EAAEtD,SAAS,CAACuD,eAAe,CAAC5C,KAAK,CAAC2C,OAAO,EAAE,KAAK,CAAC;QACxDE,MAAM,EAAExD,SAAS,CAACuD,eAAe,CAAC5C,KAAK,CAAC6C,MAAM,EAAE,KAAK,CAAC;QACtDC,IAAI,EAAEzD,SAAS,CAAC0D,UAAU,CAAC/C,KAAK,CAAC8C,IAAI,EAAE,EAAE,EAAE,IAAI;MACjD,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAED,4BAAmBrB,SAAS,EAAEzB,KAAK,EAAE;MACnCyB,SAAS,CAACiB,QAAQ,CAAC,IAAI,CAACN,GAAG,EAAE;QAC3BxB,IAAI,EAAE,cAAc;QACpByB,KAAK,EAAErC,KAAK,CAACqC,KAAK;QAClBC,QAAQ,EAAEtC,KAAK,CAACsC,QAAQ;QACxBU,YAAY,EAAE3D,SAAS,CAACuD,eAAe,CAAC5C,KAAK,CAACgD,YAAY,EAAE,IAAI;MAClE,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAED,uBAAcvB,SAAS,EAAEzB,KAAK,EAAE;MAC9ByB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAE,SAAS;QACf0B,QAAQ,EAAEtC,KAAK,CAACsC;MAClB,CAAC,CAAC;MAEF,IAAI,CAACtB,YAAY,CAACuB,MAAM,CAACd,SAAS,EAAEzB,KAAK,CAAC;MAC1C,IAAI,CAACkB,cAAc,CAACqB,MAAM,CAACd,SAAS,EAAEzB,KAAK,CAAC;MAE5CyB,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,0BAAiBf,SAAS,EAAEzB,KAAK,EAAE;MACjCyB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAE,YAAY;QAClB0B,QAAQ,EAAEtC,KAAK,CAACsC;MAClB,CAAC,CAAC;MAEF,IAAI,CAAChB,eAAe,CAACiB,MAAM,CAACd,SAAS,EAAEzB,KAAK,CAAC;MAE7CyB,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,uBAAcf,SAAS,EAAEzB,KAAK,EAAE;MAC9B;MACA,IAAI,CAACa,WAAW,CAACoC,WAAW,CAACjD,KAAK,CAAC,EAAE;QACnC;MACF;MAEAyB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAE,SAAS;QACf0B,QAAQ,EAAEtC,KAAK,CAACsC;MAClB,CAAC,CAAC;MAEF,IAAI,CAACd,YAAY,CAACe,MAAM,CAACd,SAAS,EAAEzB,KAAK,CAAC;MAE1CyB,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,oBAAWf,SAAS,EAAEzB,KAAK,EAAE;MAC3ByB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAEZ,KAAK,CAACK,QAAQ;QACpBgC,KAAK,EAAErC,KAAK,CAACqC,KAAK;QAClBC,QAAQ,EAAEtC,KAAK,CAACsC,QAAQ;QACxBjC,QAAQ,EAAEhB,SAAS,CAAC6D,iBAAiB,CAAClD,KAAK,CAACK,QAAQ,EAAE,cAAc;MACtE,CAAC,CAAC;MAEF,IAAMc,OAAO,GAAGpB,cAAc,CAACC,KAAK,CAAC;MACrC,IAAImB,OAAO,EAAE;QACX,IAAI,CAACC,YAAY,CAACmB,MAAM,CAACd,SAAS,EAAEN,OAAO,CAAC;MAC9C;MAEAM,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,0BAAiBf,SAAS,EAAEzB,KAAK,EAAE;MACjCyB,SAAS,CAACU,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3BxB,IAAI,EAAE,YAAY;QAClByB,KAAK,EAAErC,KAAK,CAACqC,KAAK;QAClBC,QAAQ,EAAEtC,KAAK,CAACsC,QAAQ;QACxB7B,UAAU,EAAET,KAAK,CAACS;MACpB,CAAC,CAAC;MAEF,IAAMU,OAAO,GAAGX,oBAAoB,CAACR,KAAK,CAAC;MAC3C,IAAImB,OAAO,EAAE;QACX,IAAI,CAACC,YAAY,CAACmB,MAAM,CAACd,SAAS,EAAEN,OAAO,CAAC;MAC9C;MAEAM,SAAS,CAACe,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,8BAA6B;MAAA,IAAb7B,UAAU,QAAVA,UAAU;MACxB,uCACKD,MAAM,CAACC,UAAU,CAAC;QACrB0B,KAAK,EAAEhD,SAAS,CAAC0D,UAAU,CAACpC,UAAU,CAAC0B,KAAK,CAAC;QAC7CC,QAAQ,EAAEjD,SAAS,CAAC0D,UAAU,CAACpC,UAAU,CAAC2B,QAAQ,CAAC;QACnD7B,UAAU,EAAEE,UAAU,CAACF,UAAU;QACjCkC,OAAO,EAAEtD,SAAS,CAAC8D,WAAW,CAACxC,UAAU,CAACgC,OAAO,CAAC;QAClDE,MAAM,EAAExD,SAAS,CAAC8D,WAAW,CAACxC,UAAU,CAACkC,MAAM,CAAC;QAChDC,IAAI,EAAEzD,SAAS,CAAC0D,UAAU,CAACpC,UAAU,CAACmC,IAAI,CAAC;QAC3CE,YAAY,EAAE3D,SAAS,CAAC8D,WAAW,CAACxC,UAAU,CAACqC,YAAY;MAAC;IAEhE;EAAC;IAAA;IAAA,OAED,uBAAcI,IAAI,EAAEC,MAAM,EAAE;MAC1B,QAAQD,IAAI;QACV,KAAK,SAAS;QACd,KAAK,QAAQ;QACb,KAAK,YAAY;QACjB,KAAK,SAAS;UACZ;UACAE,MAAM,CAACC,MAAM,CAAC,IAAI,CAACvD,KAAK,EAAEqD,MAAM,CAACrD,KAAK,CAAC;UACvC;QAEF,KAAK,SAAS;UACZ;UACA,IAAI,CAACA,KAAK,CAACC,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ,IAAI,EAAE;UAC/C,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACuD,IAAI,CAACH,MAAM,CAACrD,KAAK,CAAC;UACtC;MAAM;IAEZ;EAAC;IAAA;IAAA,OA7LD,qBAAmByD,IAAI,EAAE;MACvB;MACA,IAAIA,IAAI,CAAC7C,IAAI,KAAK,SAAS,EAAE;QAC3B,IAAI6C,IAAI,CAACC,MAAM,IAAI5D,QAAQ,CAAC2D,IAAI,CAAClC,OAAO,CAAC,EAAE;UACzC,OAAO,KAAK;QACd;MACF;MACA,OAAO,IAAI;IACb;EAAC;EAAA;AAAA,EAzBuBhC,cAAc;AAiNxCoE,MAAM,CAACC,OAAO,GAAG/C,WAAW"}