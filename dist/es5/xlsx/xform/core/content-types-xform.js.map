{"version":3,"file":"content-types-xform.js","names":["XmlStream","require","BaseXform","ContentTypesXform","xmlStream","model","openXml","StdDocAttributes","openNode","PROPERTY_ATTRIBUTES","mediaHash","media","forEach","medium","type","imageType","extension","leafNode","Extension","ContentType","PartName","worksheets","worksheet","name","id","hasSharedStrings","sharedStrings","count","tables","table","target","drawings","drawing","commentRefs","commentName","closeNode","xmlns","module","exports"],"sources":["../../../../../lib/xlsx/xform/core/content-types-xform.js"],"sourcesContent":["const XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\n\n// used for rendering the [Content_Types].xml file\n// not used for parsing\nclass ContentTypesXform extends BaseXform {\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n\n    xmlStream.openNode('Types', ContentTypesXform.PROPERTY_ATTRIBUTES);\n\n    const mediaHash = {};\n    (model.media || []).forEach(medium => {\n      if (medium.type === 'image') {\n        const imageType = medium.extension;\n        if (!mediaHash[imageType]) {\n          mediaHash[imageType] = true;\n          xmlStream.leafNode('Default', {Extension: imageType, ContentType: `image/${imageType}`});\n        }\n      }\n    });\n\n    xmlStream.leafNode('Default', {\n      Extension: 'rels',\n      ContentType: 'application/vnd.openxmlformats-package.relationships+xml',\n    });\n    xmlStream.leafNode('Default', {Extension: 'xml', ContentType: 'application/xml'});\n\n    xmlStream.leafNode('Override', {\n      PartName: '/xl/workbook.xml',\n      ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml',\n    });\n\n    model.worksheets.forEach(worksheet => {\n      const name = `/xl/worksheets/sheet${worksheet.id}.xml`;\n      xmlStream.leafNode('Override', {\n        PartName: name,\n        ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml',\n      });\n    });\n\n    xmlStream.leafNode('Override', {\n      PartName: '/xl/theme/theme1.xml',\n      ContentType: 'application/vnd.openxmlformats-officedocument.theme+xml',\n    });\n    xmlStream.leafNode('Override', {\n      PartName: '/xl/styles.xml',\n      ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml',\n    });\n\n    const hasSharedStrings = model.sharedStrings && model.sharedStrings.count;\n    if (hasSharedStrings) {\n      xmlStream.leafNode('Override', {\n        PartName: '/xl/sharedStrings.xml',\n        ContentType:\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml',\n      });\n    }\n\n    if (model.tables) {\n      model.tables.forEach(table => {\n        xmlStream.leafNode('Override', {\n          PartName: `/xl/tables/${table.target}`,\n          ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml',\n        });\n      });\n    }\n\n    if (model.drawings) {\n      model.drawings.forEach(drawing => {\n        xmlStream.leafNode('Override', {\n          PartName: `/xl/drawings/${drawing.name}.xml`,\n          ContentType: 'application/vnd.openxmlformats-officedocument.drawing+xml',\n        });\n      });\n    }\n\n    if (model.commentRefs) {\n      xmlStream.leafNode('Default', {\n        Extension: 'vml',\n        ContentType: 'application/vnd.openxmlformats-officedocument.vmlDrawing',\n      });\n\n      model.commentRefs.forEach(({commentName}) => {\n        xmlStream.leafNode('Override', {\n          PartName: `/xl/${commentName}.xml`,\n          ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml',\n        });\n      });\n    }\n\n    xmlStream.leafNode('Override', {\n      PartName: '/docProps/core.xml',\n      ContentType: 'application/vnd.openxmlformats-package.core-properties+xml',\n    });\n    xmlStream.leafNode('Override', {\n      PartName: '/docProps/app.xml',\n      ContentType: 'application/vnd.openxmlformats-officedocument.extended-properties+xml',\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen() {\n    return false;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nContentTypesXform.PROPERTY_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/package/2006/content-types',\n};\n\nmodule.exports = ContentTypesXform;\n"],"mappings":"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"}