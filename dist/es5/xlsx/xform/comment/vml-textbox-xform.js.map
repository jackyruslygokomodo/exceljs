{"version":3,"file":"vml-textbox-xform.js","names":["BaseXform","require","VmlTextboxXform","value","multiple","unit","parseFloat","toFixed","inset","split","map","margin","Number","conversionUnit","xmlStream","model","attributes","style","note","margins","Array","isArray","join","openNode","leafNode","closeNode","node","name","tag","reverseConversionUnit","module","exports"],"sources":["../../../../../lib/xlsx/xform/comment/vml-textbox-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\n\nclass VmlTextboxXform extends BaseXform {\n  get tag() {\n    return 'v:textbox';\n  }\n\n  conversionUnit(value, multiple, unit) {\n    return `${parseFloat(value) * multiple.toFixed(2)}${unit}`;\n  }\n\n  reverseConversionUnit(inset) {\n    return (inset || '').split(',').map(margin => {\n      return Number(parseFloat(this.conversionUnit(parseFloat(margin), 0.1, '')).toFixed(2));\n    });\n  }\n\n  render(xmlStream, model) {\n    const attributes = {\n      style: 'mso-direction-alt:auto',\n    };\n    if (model && model.note) {\n      let {inset} = model.note && model.note.margins;\n      if (Array.isArray(inset)) {\n        inset = inset\n          .map(margin => {\n            return this.conversionUnit(margin, 10, 'mm');\n          })\n          .join(',');\n      }\n      if (inset) {\n        attributes.inset = inset;\n      }\n    }\n    xmlStream.openNode('v:textbox', attributes);\n    xmlStream.leafNode('div', {style: 'text-align:left'});\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          inset: this.reverseConversionUnit(node.attributes.inset),\n        };\n        return true;\n      default:\n        return true;\n    }\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = VmlTextboxXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAAC,IAErCC,eAAe;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,KACnB,eAAU;MACR,OAAO,WAAW;IACpB;EAAC;IAAA;IAAA,OAED,wBAAeC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;MACpC,iBAAUC,UAAU,CAACH,KAAK,CAAC,GAAGC,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,SAAGF,IAAI;IAC1D;EAAC;IAAA;IAAA,OAED,+BAAsBG,KAAK,EAAE;MAAA;MAC3B,OAAO,CAACA,KAAK,IAAI,EAAE,EAAEC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,UAAAC,MAAM,EAAI;QAC5C,OAAOC,MAAM,CAACN,UAAU,CAAC,KAAI,CAACO,cAAc,CAACP,UAAU,CAACK,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC;MACxF,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAED,gBAAOO,SAAS,EAAEC,KAAK,EAAE;MAAA;MACvB,IAAMC,UAAU,GAAG;QACjBC,KAAK,EAAE;MACT,CAAC;MACD,IAAIF,KAAK,IAAIA,KAAK,CAACG,IAAI,EAAE;QACvB,WAAcH,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,CAACC,OAAO;UAAzCX,KAAK,QAALA,KAAK;QACV,IAAIY,KAAK,CAACC,OAAO,CAACb,KAAK,CAAC,EAAE;UACxBA,KAAK,GAAGA,KAAK,CACVE,GAAG,CAAC,UAAAC,MAAM,EAAI;YACb,OAAO,MAAI,CAACE,cAAc,CAACF,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;UAC9C,CAAC,CAAC,CACDW,IAAI,CAAC,GAAG,CAAC;QACd;QACA,IAAId,KAAK,EAAE;UACTQ,UAAU,CAACR,KAAK,GAAGA,KAAK;QAC1B;MACF;MACAM,SAAS,CAACS,QAAQ,CAAC,WAAW,EAAEP,UAAU,CAAC;MAC3CF,SAAS,CAACU,QAAQ,CAAC,KAAK,EAAE;QAACP,KAAK,EAAE;MAAiB,CAAC,CAAC;MACrDH,SAAS,CAACW,SAAS,EAAE;IACvB;EAAC;IAAA;IAAA,OAED,mBAAUC,IAAI,EAAE;MACd,QAAQA,IAAI,CAACC,IAAI;QACf,KAAK,IAAI,CAACC,GAAG;UACX,IAAI,CAACb,KAAK,GAAG;YACXP,KAAK,EAAE,IAAI,CAACqB,qBAAqB,CAACH,IAAI,CAACV,UAAU,CAACR,KAAK;UACzD,CAAC;UACD,OAAO,IAAI;QACb;UACE,OAAO,IAAI;MAAC;IAElB;EAAC;IAAA;IAAA,OAED,qBAAY,CAAC;EAAC;IAAA;IAAA,OAEd,oBAAWmB,IAAI,EAAE;MACf,QAAQA,IAAI;QACV,KAAK,IAAI,CAACC,GAAG;UACX,OAAO,KAAK;QACd;UACE,OAAO,IAAI;MAAC;IAElB;EAAC;EAAA;AAAA,EA1D2B5B,SAAS;AA6DvC8B,MAAM,CAACC,OAAO,GAAG7B,eAAe"}